schema {
  query: WeaviateObj
}

type AggregateAudioFile {
  """
  Aggregate this property"assetId"
  """
  assetId: AggregateAudioFileassetIdObj

  """
  Aggregate this property"blob"
  """
  blob: AggregateAudioFileblobObj

  """
  Aggregate this property"document"
  """
  document: AggregateAudioFiledocumentObj

  """
  Aggregate this property"duration"
  """
  duration: AggregateAudioFiledurationObj

  """
  Aggregate this property"ext"
  """
  ext: AggregateAudioFileextObj

  """Indicates the group of returned data"""
  groupedBy: AggregateAudioFileGroupedByObj

  """
  Aggregate this property"hlsUrl"
  """
  hlsUrl: AggregateAudioFilehlsUrlObj

  """
  An object used to Get Meta information about Objects on a local Weaviate
  """
  meta: AggregateAudioFileMetaObject

  """
  Aggregate this property"mimeType"
  """
  mimeType: AggregateAudioFilemimeTypeObj

  """
  Aggregate this property"order"
  """
  order: AggregateAudioFileorderObj

  """
  Aggregate this property"originalName"
  """
  originalName: AggregateAudioFileoriginalNameObj

  """
  Aggregate this property"path"
  """
  path: AggregateAudioFilepathObj

  """
  Aggregate this property"pathString"
  """
  pathString: AggregateAudioFilepathStringObj

  """
  Aggregate this property"playbackId"
  """
  playbackId: AggregateAudioFileplaybackIdObj

  """
  Aggregate this property"remoteId"
  """
  remoteId: AggregateAudioFileremoteIdObj

  """
  Aggregate this property"size"
  """
  size: AggregateAudioFilesizeObj

  """
  Aggregate this property"sourceId"
  """
  sourceId: AggregateAudioFilesourceIdObj

  """
  Aggregate this property"subtitles"
  """
  subtitles: AggregateAudioFilesubtitlesObj

  """
  Aggregate this property"url"
  """
  url: AggregateAudioFileurlObj
}

"""An object containing the path and value of the grouped property"""
type AggregateAudioFileGroupedByObj {
  """The path of the grouped property"""
  path: [String]

  """The value of the grouped property"""
  value: String
}

type AggregateAudioFileMetaObject {
  count: Int
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFileassetIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateAudioFileassetIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateAudioFileassetIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFileblobObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateAudioFileblobTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateAudioFileblobTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFiledocumentObj {
  """The classes that this object contains a reference to"""
  pointingTo: [String] @deprecated(reason: "Experimental, the format will change")

  """The datatype of this property"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFiledurationObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFileextObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateAudioFileextTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateAudioFileextTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFilehlsUrlObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateAudioFilehlsUrlTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateAudioFilehlsUrlTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFilemimeTypeObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateAudioFilemimeTypeTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateAudioFilemimeTypeTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFileorderObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFileoriginalNameObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateAudioFileoriginalNameTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateAudioFileoriginalNameTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFilepathObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateAudioFilepathTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFilepathStringObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateAudioFilepathStringTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateAudioFilepathStringTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateAudioFilepathTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFileplaybackIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateAudioFileplaybackIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateAudioFileplaybackIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFileremoteIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateAudioFileremoteIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateAudioFileremoteIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFilesizeObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFilesourceIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateAudioFilesourceIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateAudioFilesourceIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFilesubtitlesObj {
  """The classes that this object contains a reference to"""
  pointingTo: [String] @deprecated(reason: "Experimental, the format will change")

  """The datatype of this property"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateAudioFileurlObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateAudioFileurlTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateAudioFileurlTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

type AggregateGoogleCalendarEvent {
  """
  Aggregate this property"attachments"
  """
  attachments: AggregateGoogleCalendarEventattachmentsObj

  """
  Aggregate this property"createdAt"
  """
  createdAt: AggregateGoogleCalendarEventcreatedAtObj

  """
  Aggregate this property"creatorDisplayName"
  """
  creatorDisplayName: AggregateGoogleCalendarEventcreatorDisplayNameObj

  """
  Aggregate this property"creatorEmail"
  """
  creatorEmail: AggregateGoogleCalendarEventcreatorEmailObj

  """
  Aggregate this property"creatorId"
  """
  creatorId: AggregateGoogleCalendarEventcreatorIdObj

  """
  Aggregate this property"creatorSelf"
  """
  creatorSelf: AggregateGoogleCalendarEventcreatorSelfObj

  """
  Aggregate this property"descriptionHtml"
  """
  descriptionHtml: AggregateGoogleCalendarEventdescriptionHtmlObj

  """
  Aggregate this property"descriptionText"
  """
  descriptionText: AggregateGoogleCalendarEventdescriptionTextObj

  """
  Aggregate this property"end"
  """
  end: AggregateGoogleCalendarEventendObj

  """Indicates the group of returned data"""
  groupedBy: AggregateGoogleCalendarEventGroupedByObj

  """
  Aggregate this property"htmlLink"
  """
  htmlLink: AggregateGoogleCalendarEventhtmlLinkObj

  """
  Aggregate this property"location"
  """
  location: AggregateGoogleCalendarEventlocationObj

  """
  An object used to Get Meta information about Objects on a local Weaviate
  """
  meta: AggregateGoogleCalendarEventMetaObject

  """
  Aggregate this property"organizerDisplayName"
  """
  organizerDisplayName: AggregateGoogleCalendarEventorganizerDisplayNameObj

  """
  Aggregate this property"organizerEmail"
  """
  organizerEmail: AggregateGoogleCalendarEventorganizerEmailObj

  """
  Aggregate this property"organizerId"
  """
  organizerId: AggregateGoogleCalendarEventorganizerIdObj

  """
  Aggregate this property"organizerSelf"
  """
  organizerSelf: AggregateGoogleCalendarEventorganizerSelfObj

  """
  Aggregate this property"recurrence"
  """
  recurrence: AggregateGoogleCalendarEventrecurrenceObj

  """
  Aggregate this property"remoteId"
  """
  remoteId: AggregateGoogleCalendarEventremoteIdObj

  """
  Aggregate this property"sequence"
  """
  sequence: AggregateGoogleCalendarEventsequenceObj

  """
  Aggregate this property"sourceId"
  """
  sourceId: AggregateGoogleCalendarEventsourceIdObj

  """
  Aggregate this property"start"
  """
  start: AggregateGoogleCalendarEventstartObj

  """
  Aggregate this property"status"
  """
  status: AggregateGoogleCalendarEventstatusObj

  """
  Aggregate this property"summary"
  """
  summary: AggregateGoogleCalendarEventsummaryObj

  """
  Aggregate this property"title"
  """
  title: AggregateGoogleCalendarEventtitleObj

  """
  Aggregate this property"updatedAt"
  """
  updatedAt: AggregateGoogleCalendarEventupdatedAtObj
}

"""An object containing the path and value of the grouped property"""
type AggregateGoogleCalendarEventGroupedByObj {
  """The path of the grouped property"""
  path: [String]

  """The value of the grouped property"""
  value: String
}

type AggregateGoogleCalendarEventMetaObject {
  count: Int
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventattachmentsObj {
  """The classes that this object contains a reference to"""
  pointingTo: [String] @deprecated(reason: "Experimental, the format will change")

  """The datatype of this property"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventcreatedAtObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: String

  """Aggregate on the median of numeric property values"""
  median: String

  """Aggregate on the minimum of numeric property values"""
  minimum: String

  """Aggregate on the mode of numeric property values"""
  mode: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventcreatorDisplayNameObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventcreatorDisplayNameTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventcreatorDisplayNameTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventcreatorEmailObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventcreatorEmailTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventcreatorEmailTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventcreatorIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventcreatorIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventcreatorIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventcreatorSelfObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  The percentage of false values for this boolean property in the dataset
  """
  percentageFalse: Float

  """The percentage of true values for this boolean property in the dataset"""
  percentageTrue: Float

  """How often this boolean property's value is false in the dataset"""
  totalFalse: Int

  """How often this boolean property's value is true in the dataset"""
  totalTrue: Int

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventdescriptionHtmlObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventdescriptionHtmlTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventdescriptionHtmlTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventdescriptionTextObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventdescriptionTextTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventdescriptionTextTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventendObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: String

  """Aggregate on the median of numeric property values"""
  median: String

  """Aggregate on the minimum of numeric property values"""
  minimum: String

  """Aggregate on the mode of numeric property values"""
  mode: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventhtmlLinkObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventhtmlLinkTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventhtmlLinkTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventlocationObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventlocationTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventlocationTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventorganizerDisplayNameObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventorganizerDisplayNameTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventorganizerDisplayNameTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventorganizerEmailObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventorganizerEmailTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventorganizerEmailTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventorganizerIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventorganizerIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventorganizerIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventorganizerSelfObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  The percentage of false values for this boolean property in the dataset
  """
  percentageFalse: Float

  """The percentage of true values for this boolean property in the dataset"""
  percentageTrue: Float

  """How often this boolean property's value is false in the dataset"""
  totalFalse: Int

  """How often this boolean property's value is true in the dataset"""
  totalTrue: Int

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventrecurrenceObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventrecurrenceTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventrecurrenceTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventremoteIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventremoteIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventremoteIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventsequenceObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventsourceIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventsourceIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventsourceIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventstartObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: String

  """Aggregate on the median of numeric property values"""
  median: String

  """Aggregate on the minimum of numeric property values"""
  minimum: String

  """Aggregate on the mode of numeric property values"""
  mode: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventstatusObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventstatusTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventstatusTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventsummaryObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventsummaryTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventsummaryTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventtitleObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleCalendarEventtitleTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleCalendarEventtitleTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleCalendarEventupdatedAtObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: String

  """Aggregate on the median of numeric property values"""
  median: String

  """Aggregate on the minimum of numeric property values"""
  minimum: String

  """Aggregate on the mode of numeric property values"""
  mode: String
}

type AggregateGoogleDoc {
  """
  Aggregate this property"blocks"
  """
  blocks: AggregateGoogleDocblocksObj

  """
  Aggregate this property"createdAt"
  """
  createdAt: AggregateGoogleDoccreatedAtObj

  """Indicates the group of returned data"""
  groupedBy: AggregateGoogleDocGroupedByObj

  """
  Aggregate this property"html"
  """
  html: AggregateGoogleDochtmlObj

  """
  Aggregate this property"mentions"
  """
  mentions: AggregateGoogleDocmentionsObj

  """
  An object used to Get Meta information about Objects on a local Weaviate
  """
  meta: AggregateGoogleDocMetaObject

  """
  Aggregate this property"mimeType"
  """
  mimeType: AggregateGoogleDocmimeTypeObj

  """
  Aggregate this property"modifiedAt"
  """
  modifiedAt: AggregateGoogleDocmodifiedAtObj

  """
  Aggregate this property"originalName"
  """
  originalName: AggregateGoogleDocoriginalNameObj

  """
  Aggregate this property"path"
  """
  path: AggregateGoogleDocpathObj

  """
  Aggregate this property"pathString"
  """
  pathString: AggregateGoogleDocpathStringObj

  """
  Aggregate this property"remoteId"
  """
  remoteId: AggregateGoogleDocremoteIdObj

  """
  Aggregate this property"size"
  """
  size: AggregateGoogleDocsizeObj

  """
  Aggregate this property"slug"
  """
  slug: AggregateGoogleDocslugObj

  """
  Aggregate this property"sourceId"
  """
  sourceId: AggregateGoogleDocsourceIdObj

  """
  Aggregate this property"subtitle"
  """
  subtitle: AggregateGoogleDocsubtitleObj

  """
  Aggregate this property"summary"
  """
  summary: AggregateGoogleDocsummaryObj

  """
  Aggregate this property"tags"
  """
  tags: AggregateGoogleDoctagsObj

  """
  Aggregate this property"text"
  """
  text: AggregateGoogleDoctextObj

  """
  Aggregate this property"title"
  """
  title: AggregateGoogleDoctitleObj

  """
  Aggregate this property"toc"
  """
  toc: AggregateGoogleDoctocObj
}

"""An object containing the path and value of the grouped property"""
type AggregateGoogleDocGroupedByObj {
  """The path of the grouped property"""
  path: [String]

  """The value of the grouped property"""
  value: String
}

type AggregateGoogleDocMetaObject {
  count: Int
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDocblocksObj {
  """The classes that this object contains a reference to"""
  pointingTo: [String] @deprecated(reason: "Experimental, the format will change")

  """The datatype of this property"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDoccreatedAtObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: String

  """Aggregate on the median of numeric property values"""
  median: String

  """Aggregate on the minimum of numeric property values"""
  minimum: String

  """Aggregate on the mode of numeric property values"""
  mode: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDochtmlObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleDochtmlTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleDochtmlTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDocmentionsObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleDocmentionsTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleDocmentionsTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDocmimeTypeObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleDocmimeTypeTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleDocmimeTypeTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDocmodifiedAtObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: String

  """Aggregate on the median of numeric property values"""
  median: String

  """Aggregate on the minimum of numeric property values"""
  minimum: String

  """Aggregate on the mode of numeric property values"""
  mode: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDocoriginalNameObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleDocoriginalNameTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleDocoriginalNameTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDocpathObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleDocpathTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDocpathStringObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleDocpathStringTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleDocpathStringTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleDocpathTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDocremoteIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleDocremoteIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleDocremoteIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDocsizeObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDocslugObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleDocslugTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleDocslugTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDocsourceIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleDocsourceIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleDocsourceIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDocsubtitleObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleDocsubtitleTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleDocsubtitleTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDocsummaryObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleDocsummaryTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleDocsummaryTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDoctagsObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleDoctagsTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleDoctagsTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDoctextObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleDoctextTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleDoctextTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDoctitleObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleDoctitleTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleDoctitleTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateGoogleDoctocObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateGoogleDoctocTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateGoogleDoctocTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

type AggregateImageBlock {
  """
  Aggregate this property"alt"
  """
  alt: AggregateImageBlockaltObj

  """
  Aggregate this property"blob"
  """
  blob: AggregateImageBlockblobObj

  """
  Aggregate this property"createdAt"
  """
  createdAt: AggregateImageBlockcreatedAtObj

  """
  Aggregate this property"document"
  """
  document: AggregateImageBlockdocumentObj

  """
  Aggregate this property"ext"
  """
  ext: AggregateImageBlockextObj

  """Indicates the group of returned data"""
  groupedBy: AggregateImageBlockGroupedByObj

  """
  Aggregate this property"height"
  """
  height: AggregateImageBlockheightObj

  """
  An object used to Get Meta information about Objects on a local Weaviate
  """
  meta: AggregateImageBlockMetaObject

  """
  Aggregate this property"mimeType"
  """
  mimeType: AggregateImageBlockmimeTypeObj

  """
  Aggregate this property"modifiedAt"
  """
  modifiedAt: AggregateImageBlockmodifiedAtObj

  """
  Aggregate this property"order"
  """
  order: AggregateImageBlockorderObj

  """
  Aggregate this property"originalName"
  """
  originalName: AggregateImageBlockoriginalNameObj

  """
  Aggregate this property"path"
  """
  path: AggregateImageBlockpathObj

  """
  Aggregate this property"pathString"
  """
  pathString: AggregateImageBlockpathStringObj

  """
  Aggregate this property"remoteId"
  """
  remoteId: AggregateImageBlockremoteIdObj

  """
  Aggregate this property"size"
  """
  size: AggregateImageBlocksizeObj

  """
  Aggregate this property"sourceId"
  """
  sourceId: AggregateImageBlocksourceIdObj

  """
  Aggregate this property"title"
  """
  title: AggregateImageBlocktitleObj

  """
  Aggregate this property"url"
  """
  url: AggregateImageBlockurlObj

  """
  Aggregate this property"width"
  """
  width: AggregateImageBlockwidthObj
}

"""An object containing the path and value of the grouped property"""
type AggregateImageBlockGroupedByObj {
  """The path of the grouped property"""
  path: [String]

  """The value of the grouped property"""
  value: String
}

type AggregateImageBlockMetaObject {
  count: Int
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlockaltObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateImageBlockaltTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateImageBlockaltTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlockblobObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateImageBlockblobTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateImageBlockblobTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlockcreatedAtObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: String

  """Aggregate on the median of numeric property values"""
  median: String

  """Aggregate on the minimum of numeric property values"""
  minimum: String

  """Aggregate on the mode of numeric property values"""
  mode: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlockdocumentObj {
  """The classes that this object contains a reference to"""
  pointingTo: [String] @deprecated(reason: "Experimental, the format will change")

  """The datatype of this property"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlockextObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateImageBlockextTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateImageBlockextTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlockheightObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlockmimeTypeObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateImageBlockmimeTypeTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateImageBlockmimeTypeTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlockmodifiedAtObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: String

  """Aggregate on the median of numeric property values"""
  median: String

  """Aggregate on the minimum of numeric property values"""
  minimum: String

  """Aggregate on the mode of numeric property values"""
  mode: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlockorderObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlockoriginalNameObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateImageBlockoriginalNameTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateImageBlockoriginalNameTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlockpathObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateImageBlockpathTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlockpathStringObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateImageBlockpathStringTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateImageBlockpathStringTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateImageBlockpathTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlockremoteIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateImageBlockremoteIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateImageBlockremoteIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlocksizeObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlocksourceIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateImageBlocksourceIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateImageBlocksourceIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlocktitleObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateImageBlocktitleTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateImageBlocktitleTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlockurlObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateImageBlockurlTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateImageBlockurlTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateImageBlockwidthObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""Hybrid search"""
input AggregateObjectsAudioFileHybridInpObj {
  """Search weight"""
  alpha: Float

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input AggregateObjectsAudioFileNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input AggregateObjectsAudioFileNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

input AggregateObjectsAudioFileWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input AggregateObjectsAudioFileWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input AggregateObjectsAudioFileWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: AggregateObjectsAudioFileWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: AggregateObjectsAudioFileWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input AggregateObjectsAudioFileWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsAudioFileWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsAudioFileWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsAudioFile

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsAudioFile

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsAudioFileWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsAudioFile

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsAudioFile

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsAudioFile

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsAudioFile
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input AggregateObjectsAudioFileWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsAudioFileWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsAudioFileWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsAudioFile

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsAudioFile

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsAudioFileWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsAudioFile

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsAudioFile

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsAudioFile

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsAudioFile
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum AggregateObjectsAudioFileWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""Hybrid search"""
input AggregateObjectsGoogleCalendarEventHybridInpObj {
  """Search weight"""
  alpha: Float

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input AggregateObjectsGoogleCalendarEventNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input AggregateObjectsGoogleCalendarEventNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

input AggregateObjectsGoogleCalendarEventWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input AggregateObjectsGoogleCalendarEventWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input AggregateObjectsGoogleCalendarEventWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: AggregateObjectsGoogleCalendarEventWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: AggregateObjectsGoogleCalendarEventWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input AggregateObjectsGoogleCalendarEventWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsGoogleCalendarEventWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsGoogleCalendarEventWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsGoogleCalendarEvent

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsGoogleCalendarEvent

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsGoogleCalendarEventWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsGoogleCalendarEvent

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsGoogleCalendarEvent

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsGoogleCalendarEvent

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsGoogleCalendarEvent
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input AggregateObjectsGoogleCalendarEventWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsGoogleCalendarEventWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsGoogleCalendarEventWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsGoogleCalendarEvent

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsGoogleCalendarEvent

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsGoogleCalendarEventWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsGoogleCalendarEvent

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsGoogleCalendarEvent

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsGoogleCalendarEvent

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsGoogleCalendarEvent
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum AggregateObjectsGoogleCalendarEventWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""Hybrid search"""
input AggregateObjectsGoogleDocHybridInpObj {
  """Search weight"""
  alpha: Float

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input AggregateObjectsGoogleDocNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input AggregateObjectsGoogleDocNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

input AggregateObjectsGoogleDocWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input AggregateObjectsGoogleDocWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input AggregateObjectsGoogleDocWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: AggregateObjectsGoogleDocWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: AggregateObjectsGoogleDocWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input AggregateObjectsGoogleDocWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsGoogleDocWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsGoogleDocWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsGoogleDoc

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsGoogleDoc

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsGoogleDocWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsGoogleDoc

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsGoogleDoc

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsGoogleDoc

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsGoogleDoc
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input AggregateObjectsGoogleDocWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsGoogleDocWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsGoogleDocWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsGoogleDoc

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsGoogleDoc

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsGoogleDocWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsGoogleDoc

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsGoogleDoc

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsGoogleDoc

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsGoogleDoc
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum AggregateObjectsGoogleDocWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""Hybrid search"""
input AggregateObjectsImageBlockHybridInpObj {
  """Search weight"""
  alpha: Float

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input AggregateObjectsImageBlockNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input AggregateObjectsImageBlockNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

input AggregateObjectsImageBlockWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input AggregateObjectsImageBlockWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input AggregateObjectsImageBlockWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: AggregateObjectsImageBlockWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: AggregateObjectsImageBlockWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input AggregateObjectsImageBlockWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsImageBlockWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsImageBlockWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsImageBlock

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsImageBlock

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsImageBlockWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsImageBlock

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsImageBlock

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsImageBlock

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsImageBlock
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input AggregateObjectsImageBlockWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsImageBlockWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsImageBlockWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsImageBlock

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsImageBlock

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsImageBlockWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsImageBlock

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsImageBlock

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsImageBlock

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsImageBlock
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum AggregateObjectsImageBlockWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""An object allowing Aggregation of %ss on a local Weaviate"""
type AggregateObjectsObj {
  AudioFile(
    """Specify which properties to group by"""
    groupBy: [String]
    hybrid: AggregateObjectsAudioFileHybridInpObj

    """Show the first x results (pagination option)"""
    limit: Int
    nearObject: AggregateObjectsAudioFileNearObjectInpObj
    nearText: Txt2VecC11yAggregateAudioFileNearTextInpObj
    nearVector: AggregateObjectsAudioFileNearVectorInpObj

    """Show the first x results (pagination option)"""
    objectLimit: Int

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: AggregateObjectsAudioFileWhereInpObj
  ): [AggregateAudioFile]
  GoogleCalendarEvent(
    """Specify which properties to group by"""
    groupBy: [String]
    hybrid: AggregateObjectsGoogleCalendarEventHybridInpObj

    """Show the first x results (pagination option)"""
    limit: Int
    nearObject: AggregateObjectsGoogleCalendarEventNearObjectInpObj
    nearText: Txt2VecC11yAggregateGoogleCalendarEventNearTextInpObj
    nearVector: AggregateObjectsGoogleCalendarEventNearVectorInpObj

    """Show the first x results (pagination option)"""
    objectLimit: Int

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: AggregateObjectsGoogleCalendarEventWhereInpObj
  ): [AggregateGoogleCalendarEvent]
  GoogleDoc(
    """Specify which properties to group by"""
    groupBy: [String]
    hybrid: AggregateObjectsGoogleDocHybridInpObj

    """Show the first x results (pagination option)"""
    limit: Int
    nearObject: AggregateObjectsGoogleDocNearObjectInpObj
    nearText: Txt2VecC11yAggregateGoogleDocNearTextInpObj
    nearVector: AggregateObjectsGoogleDocNearVectorInpObj

    """Show the first x results (pagination option)"""
    objectLimit: Int

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: AggregateObjectsGoogleDocWhereInpObj
  ): [AggregateGoogleDoc]
  ImageBlock(
    """Specify which properties to group by"""
    groupBy: [String]
    hybrid: AggregateObjectsImageBlockHybridInpObj

    """Show the first x results (pagination option)"""
    limit: Int
    nearObject: AggregateObjectsImageBlockNearObjectInpObj
    nearText: Txt2VecC11yAggregateImageBlockNearTextInpObj
    nearVector: AggregateObjectsImageBlockNearVectorInpObj

    """Show the first x results (pagination option)"""
    objectLimit: Int

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: AggregateObjectsImageBlockWhereInpObj
  ): [AggregateImageBlock]
  SubtitleEntry(
    """Specify which properties to group by"""
    groupBy: [String]
    hybrid: AggregateObjectsSubtitleEntryHybridInpObj

    """Show the first x results (pagination option)"""
    limit: Int
    nearObject: AggregateObjectsSubtitleEntryNearObjectInpObj
    nearText: Txt2VecC11yAggregateSubtitleEntryNearTextInpObj
    nearVector: AggregateObjectsSubtitleEntryNearVectorInpObj

    """Show the first x results (pagination option)"""
    objectLimit: Int

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: AggregateObjectsSubtitleEntryWhereInpObj
  ): [AggregateSubtitleEntry]
  SubtitleFile(
    """Specify which properties to group by"""
    groupBy: [String]
    hybrid: AggregateObjectsSubtitleFileHybridInpObj

    """Show the first x results (pagination option)"""
    limit: Int
    nearObject: AggregateObjectsSubtitleFileNearObjectInpObj
    nearText: Txt2VecC11yAggregateSubtitleFileNearTextInpObj
    nearVector: AggregateObjectsSubtitleFileNearVectorInpObj

    """Show the first x results (pagination option)"""
    objectLimit: Int

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: AggregateObjectsSubtitleFileWhereInpObj
  ): [AggregateSubtitleFile]
  TextBlock(
    """Specify which properties to group by"""
    groupBy: [String]
    hybrid: AggregateObjectsTextBlockHybridInpObj

    """Show the first x results (pagination option)"""
    limit: Int
    nearObject: AggregateObjectsTextBlockNearObjectInpObj
    nearText: Txt2VecC11yAggregateTextBlockNearTextInpObj
    nearVector: AggregateObjectsTextBlockNearVectorInpObj

    """Show the first x results (pagination option)"""
    objectLimit: Int

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: AggregateObjectsTextBlockWhereInpObj
  ): [AggregateTextBlock]
  TextDocument(
    """Specify which properties to group by"""
    groupBy: [String]
    hybrid: AggregateObjectsTextDocumentHybridInpObj

    """Show the first x results (pagination option)"""
    limit: Int
    nearObject: AggregateObjectsTextDocumentNearObjectInpObj
    nearText: Txt2VecC11yAggregateTextDocumentNearTextInpObj
    nearVector: AggregateObjectsTextDocumentNearVectorInpObj

    """Show the first x results (pagination option)"""
    objectLimit: Int

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: AggregateObjectsTextDocumentWhereInpObj
  ): [AggregateTextDocument]
  VideoFile(
    """Specify which properties to group by"""
    groupBy: [String]
    hybrid: AggregateObjectsVideoFileHybridInpObj

    """Show the first x results (pagination option)"""
    limit: Int
    nearObject: AggregateObjectsVideoFileNearObjectInpObj
    nearText: Txt2VecC11yAggregateVideoFileNearTextInpObj
    nearVector: AggregateObjectsVideoFileNearVectorInpObj

    """Show the first x results (pagination option)"""
    objectLimit: Int

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: AggregateObjectsVideoFileWhereInpObj
  ): [AggregateVideoFile]
}

"""Hybrid search"""
input AggregateObjectsSubtitleEntryHybridInpObj {
  """Search weight"""
  alpha: Float

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input AggregateObjectsSubtitleEntryNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input AggregateObjectsSubtitleEntryNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

input AggregateObjectsSubtitleEntryWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input AggregateObjectsSubtitleEntryWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input AggregateObjectsSubtitleEntryWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: AggregateObjectsSubtitleEntryWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: AggregateObjectsSubtitleEntryWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input AggregateObjectsSubtitleEntryWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsSubtitleEntryWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsSubtitleEntryWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsSubtitleEntry

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsSubtitleEntry

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsSubtitleEntryWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsSubtitleEntry

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsSubtitleEntry

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsSubtitleEntry

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsSubtitleEntry
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input AggregateObjectsSubtitleEntryWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsSubtitleEntryWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsSubtitleEntryWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsSubtitleEntry

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsSubtitleEntry

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsSubtitleEntryWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsSubtitleEntry

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsSubtitleEntry

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsSubtitleEntry

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsSubtitleEntry
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum AggregateObjectsSubtitleEntryWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""Hybrid search"""
input AggregateObjectsSubtitleFileHybridInpObj {
  """Search weight"""
  alpha: Float

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input AggregateObjectsSubtitleFileNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input AggregateObjectsSubtitleFileNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

input AggregateObjectsSubtitleFileWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input AggregateObjectsSubtitleFileWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input AggregateObjectsSubtitleFileWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: AggregateObjectsSubtitleFileWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: AggregateObjectsSubtitleFileWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input AggregateObjectsSubtitleFileWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsSubtitleFileWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsSubtitleFileWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsSubtitleFile

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsSubtitleFile

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsSubtitleFileWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsSubtitleFile

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsSubtitleFile

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsSubtitleFile

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsSubtitleFile
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input AggregateObjectsSubtitleFileWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsSubtitleFileWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsSubtitleFileWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsSubtitleFile

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsSubtitleFile

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsSubtitleFileWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsSubtitleFile

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsSubtitleFile

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsSubtitleFile

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsSubtitleFile
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum AggregateObjectsSubtitleFileWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""Hybrid search"""
input AggregateObjectsTextBlockHybridInpObj {
  """Search weight"""
  alpha: Float

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input AggregateObjectsTextBlockNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input AggregateObjectsTextBlockNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

input AggregateObjectsTextBlockWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input AggregateObjectsTextBlockWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input AggregateObjectsTextBlockWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: AggregateObjectsTextBlockWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: AggregateObjectsTextBlockWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input AggregateObjectsTextBlockWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsTextBlockWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsTextBlockWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsTextBlock

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsTextBlock

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsTextBlockWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsTextBlock

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsTextBlock

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsTextBlock

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsTextBlock
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input AggregateObjectsTextBlockWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsTextBlockWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsTextBlockWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsTextBlock

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsTextBlock

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsTextBlockWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsTextBlock

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsTextBlock

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsTextBlock

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsTextBlock
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum AggregateObjectsTextBlockWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""Hybrid search"""
input AggregateObjectsTextDocumentHybridInpObj {
  """Search weight"""
  alpha: Float

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input AggregateObjectsTextDocumentNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input AggregateObjectsTextDocumentNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

input AggregateObjectsTextDocumentWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input AggregateObjectsTextDocumentWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input AggregateObjectsTextDocumentWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: AggregateObjectsTextDocumentWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: AggregateObjectsTextDocumentWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input AggregateObjectsTextDocumentWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsTextDocumentWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsTextDocumentWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsTextDocument

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsTextDocument

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsTextDocumentWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsTextDocument

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsTextDocument

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsTextDocument

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsTextDocument
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input AggregateObjectsTextDocumentWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsTextDocumentWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsTextDocumentWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsTextDocument

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsTextDocument

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsTextDocumentWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsTextDocument

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsTextDocument

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsTextDocument

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsTextDocument
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum AggregateObjectsTextDocumentWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""Hybrid search"""
input AggregateObjectsVideoFileHybridInpObj {
  """Search weight"""
  alpha: Float

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input AggregateObjectsVideoFileNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input AggregateObjectsVideoFileNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

input AggregateObjectsVideoFileWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input AggregateObjectsVideoFileWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input AggregateObjectsVideoFileWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: AggregateObjectsVideoFileWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: AggregateObjectsVideoFileWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input AggregateObjectsVideoFileWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsVideoFileWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsVideoFileWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsVideoFile

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsVideoFile

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsVideoFileWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsVideoFile

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsVideoFile

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsVideoFile

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsVideoFile
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input AggregateObjectsVideoFileWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [AggregateObjectsVideoFileWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: AggregateObjectsVideoFileWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanAggregateObjectsVideoFile

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateAggregateObjectsVideoFile

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: AggregateObjectsVideoFileWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntAggregateObjectsVideoFile

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatAggregateObjectsVideoFile

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringAggregateObjectsVideoFile

  """Specify a Text value that the target property will be compared to"""
  valueText: TextAggregateObjectsVideoFile
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum AggregateObjectsVideoFileWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

type AggregateSubtitleEntry {
  """
  Aggregate this property"document"
  """
  document: AggregateSubtitleEntrydocumentObj

  """
  Aggregate this property"end"
  """
  end: AggregateSubtitleEntryendObj

  """Indicates the group of returned data"""
  groupedBy: AggregateSubtitleEntryGroupedByObj

  """
  An object used to Get Meta information about Objects on a local Weaviate
  """
  meta: AggregateSubtitleEntryMetaObject

  """
  Aggregate this property"order"
  """
  order: AggregateSubtitleEntryorderObj

  """
  Aggregate this property"remoteId"
  """
  remoteId: AggregateSubtitleEntryremoteIdObj

  """
  Aggregate this property"sourceId"
  """
  sourceId: AggregateSubtitleEntrysourceIdObj

  """
  Aggregate this property"start"
  """
  start: AggregateSubtitleEntrystartObj

  """
  Aggregate this property"text"
  """
  text: AggregateSubtitleEntrytextObj
}

"""An object containing the path and value of the grouped property"""
type AggregateSubtitleEntryGroupedByObj {
  """The path of the grouped property"""
  path: [String]

  """The value of the grouped property"""
  value: String
}

type AggregateSubtitleEntryMetaObject {
  count: Int
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleEntrydocumentObj {
  """The classes that this object contains a reference to"""
  pointingTo: [String] @deprecated(reason: "Experimental, the format will change")

  """The datatype of this property"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleEntryendObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateSubtitleEntryendTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateSubtitleEntryendTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleEntryorderObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleEntryremoteIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateSubtitleEntryremoteIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateSubtitleEntryremoteIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleEntrysourceIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateSubtitleEntrysourceIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateSubtitleEntrysourceIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleEntrystartObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateSubtitleEntrystartTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateSubtitleEntrystartTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleEntrytextObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateSubtitleEntrytextTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateSubtitleEntrytextTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

type AggregateSubtitleFile {
  """
  Aggregate this property"autogenerated"
  """
  autogenerated: AggregateSubtitleFileautogeneratedObj

  """
  Aggregate this property"createdAt"
  """
  createdAt: AggregateSubtitleFilecreatedAtObj

  """
  Aggregate this property"entries"
  """
  entries: AggregateSubtitleFileentriesObj

  """
  Aggregate this property"format"
  """
  format: AggregateSubtitleFileformatObj

  """Indicates the group of returned data"""
  groupedBy: AggregateSubtitleFileGroupedByObj

  """
  Aggregate this property"language"
  """
  language: AggregateSubtitleFilelanguageObj

  """
  Aggregate this property"media"
  """
  media: AggregateSubtitleFilemediaObj

  """
  An object used to Get Meta information about Objects on a local Weaviate
  """
  meta: AggregateSubtitleFileMetaObject

  """
  Aggregate this property"mimeType"
  """
  mimeType: AggregateSubtitleFilemimeTypeObj

  """
  Aggregate this property"modifiedAt"
  """
  modifiedAt: AggregateSubtitleFilemodifiedAtObj

  """
  Aggregate this property"originalName"
  """
  originalName: AggregateSubtitleFileoriginalNameObj

  """
  Aggregate this property"path"
  """
  path: AggregateSubtitleFilepathObj

  """
  Aggregate this property"pathString"
  """
  pathString: AggregateSubtitleFilepathStringObj

  """
  Aggregate this property"remoteId"
  """
  remoteId: AggregateSubtitleFileremoteIdObj

  """
  Aggregate this property"size"
  """
  size: AggregateSubtitleFilesizeObj

  """
  Aggregate this property"sourceId"
  """
  sourceId: AggregateSubtitleFilesourceIdObj

  """
  Aggregate this property"url"
  """
  url: AggregateSubtitleFileurlObj
}

"""An object containing the path and value of the grouped property"""
type AggregateSubtitleFileGroupedByObj {
  """The path of the grouped property"""
  path: [String]

  """The value of the grouped property"""
  value: String
}

type AggregateSubtitleFileMetaObject {
  count: Int
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleFileautogeneratedObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  The percentage of false values for this boolean property in the dataset
  """
  percentageFalse: Float

  """The percentage of true values for this boolean property in the dataset"""
  percentageTrue: Float

  """How often this boolean property's value is false in the dataset"""
  totalFalse: Int

  """How often this boolean property's value is true in the dataset"""
  totalTrue: Int

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleFilecreatedAtObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: String

  """Aggregate on the median of numeric property values"""
  median: String

  """Aggregate on the minimum of numeric property values"""
  minimum: String

  """Aggregate on the mode of numeric property values"""
  mode: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleFileentriesObj {
  """The classes that this object contains a reference to"""
  pointingTo: [String] @deprecated(reason: "Experimental, the format will change")

  """The datatype of this property"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleFileformatObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateSubtitleFileformatTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateSubtitleFileformatTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleFilelanguageObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateSubtitleFilelanguageTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateSubtitleFilelanguageTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleFilemediaObj {
  """The classes that this object contains a reference to"""
  pointingTo: [String] @deprecated(reason: "Experimental, the format will change")

  """The datatype of this property"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleFilemimeTypeObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateSubtitleFilemimeTypeTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateSubtitleFilemimeTypeTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleFilemodifiedAtObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: String

  """Aggregate on the median of numeric property values"""
  median: String

  """Aggregate on the minimum of numeric property values"""
  minimum: String

  """Aggregate on the mode of numeric property values"""
  mode: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleFileoriginalNameObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateSubtitleFileoriginalNameTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateSubtitleFileoriginalNameTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleFilepathObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateSubtitleFilepathTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleFilepathStringObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateSubtitleFilepathStringTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateSubtitleFilepathStringTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateSubtitleFilepathTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleFileremoteIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateSubtitleFileremoteIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateSubtitleFileremoteIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleFilesizeObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleFilesourceIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateSubtitleFilesourceIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateSubtitleFilesourceIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateSubtitleFileurlObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateSubtitleFileurlTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateSubtitleFileurlTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

type AggregateTextBlock {
  """
  Aggregate this property"classNames"
  """
  classNames: AggregateTextBlockclassNamesObj

  """
  Aggregate this property"document"
  """
  document: AggregateTextBlockdocumentObj

  """
  Aggregate this property"footnotes"
  """
  footnotes: AggregateTextBlockfootnotesObj

  """Indicates the group of returned data"""
  groupedBy: AggregateTextBlockGroupedByObj

  """
  Aggregate this property"html"
  """
  html: AggregateTextBlockhtmlObj

  """
  An object used to Get Meta information about Objects on a local Weaviate
  """
  meta: AggregateTextBlockMetaObject

  """
  Aggregate this property"order"
  """
  order: AggregateTextBlockorderObj

  """
  Aggregate this property"remoteId"
  """
  remoteId: AggregateTextBlockremoteIdObj

  """
  Aggregate this property"sourceId"
  """
  sourceId: AggregateTextBlocksourceIdObj

  """
  Aggregate this property"tagName"
  """
  tagName: AggregateTextBlocktagNameObj

  """
  Aggregate this property"text"
  """
  text: AggregateTextBlocktextObj
}

"""An object containing the path and value of the grouped property"""
type AggregateTextBlockGroupedByObj {
  """The path of the grouped property"""
  path: [String]

  """The value of the grouped property"""
  value: String
}

type AggregateTextBlockMetaObject {
  count: Int
}

"""An object containing Aggregation information about this property"""
type AggregateTextBlockclassNamesObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextBlockclassNamesTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextBlockclassNamesTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextBlockdocumentObj {
  """The classes that this object contains a reference to"""
  pointingTo: [String] @deprecated(reason: "Experimental, the format will change")

  """The datatype of this property"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextBlockfootnotesObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextBlockfootnotesTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextBlockfootnotesTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextBlockhtmlObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextBlockhtmlTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextBlockhtmlTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextBlockorderObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextBlockremoteIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextBlockremoteIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextBlockremoteIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextBlocksourceIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextBlocksourceIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextBlocksourceIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextBlocktagNameObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextBlocktagNameTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextBlocktagNameTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextBlocktextObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextBlocktextTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextBlocktextTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

type AggregateTextDocument {
  """
  Aggregate this property"authors"
  """
  authors: AggregateTextDocumentauthorsObj

  """
  Aggregate this property"blocks"
  """
  blocks: AggregateTextDocumentblocksObj

  """
  Aggregate this property"createdAt"
  """
  createdAt: AggregateTextDocumentcreatedAtObj

  """
  Aggregate this property"description"
  """
  description: AggregateTextDocumentdescriptionObj

  """
  Aggregate this property"ext"
  """
  ext: AggregateTextDocumentextObj

  """Indicates the group of returned data"""
  groupedBy: AggregateTextDocumentGroupedByObj

  """
  Aggregate this property"html"
  """
  html: AggregateTextDocumenthtmlObj

  """
  An object used to Get Meta information about Objects on a local Weaviate
  """
  meta: AggregateTextDocumentMetaObject

  """
  Aggregate this property"mimeType"
  """
  mimeType: AggregateTextDocumentmimeTypeObj

  """
  Aggregate this property"modifiedAt"
  """
  modifiedAt: AggregateTextDocumentmodifiedAtObj

  """
  Aggregate this property"originalName"
  """
  originalName: AggregateTextDocumentoriginalNameObj

  """
  Aggregate this property"path"
  """
  path: AggregateTextDocumentpathObj

  """
  Aggregate this property"pathString"
  """
  pathString: AggregateTextDocumentpathStringObj

  """
  Aggregate this property"properties"
  """
  properties: AggregateTextDocumentpropertiesObj

  """
  Aggregate this property"remoteId"
  """
  remoteId: AggregateTextDocumentremoteIdObj

  """
  Aggregate this property"sourceId"
  """
  sourceId: AggregateTextDocumentsourceIdObj

  """
  Aggregate this property"subtitle"
  """
  subtitle: AggregateTextDocumentsubtitleObj

  """
  Aggregate this property"tags"
  """
  tags: AggregateTextDocumenttagsObj

  """
  Aggregate this property"text"
  """
  text: AggregateTextDocumenttextObj

  """
  Aggregate this property"title"
  """
  title: AggregateTextDocumenttitleObj

  """
  Aggregate this property"toc"
  """
  toc: AggregateTextDocumenttocObj
}

"""An object containing the path and value of the grouped property"""
type AggregateTextDocumentGroupedByObj {
  """The path of the grouped property"""
  path: [String]

  """The value of the grouped property"""
  value: String
}

type AggregateTextDocumentMetaObject {
  count: Int
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumentauthorsObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumentauthorsTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumentauthorsTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumentblocksObj {
  """The classes that this object contains a reference to"""
  pointingTo: [String] @deprecated(reason: "Experimental, the format will change")

  """The datatype of this property"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumentcreatedAtObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: String

  """Aggregate on the median of numeric property values"""
  median: String

  """Aggregate on the minimum of numeric property values"""
  minimum: String

  """Aggregate on the mode of numeric property values"""
  mode: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumentdescriptionObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumentdescriptionTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumentdescriptionTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumentextObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumentextTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumentextTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumenthtmlObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumenthtmlTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumenthtmlTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumentmimeTypeObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumentmimeTypeTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumentmimeTypeTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumentmodifiedAtObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: String

  """Aggregate on the median of numeric property values"""
  median: String

  """Aggregate on the minimum of numeric property values"""
  minimum: String

  """Aggregate on the mode of numeric property values"""
  mode: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumentoriginalNameObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumentoriginalNameTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumentoriginalNameTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumentpathObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumentpathTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumentpathStringObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumentpathStringTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumentpathStringTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumentpathTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumentpropertiesObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumentpropertiesTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumentpropertiesTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumentremoteIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumentremoteIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumentremoteIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumentsourceIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumentsourceIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumentsourceIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumentsubtitleObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumentsubtitleTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumentsubtitleTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumenttagsObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumenttagsTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumenttagsTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumenttextObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumenttextTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumenttextTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumenttitleObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumenttitleTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumenttitleTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateTextDocumenttocObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateTextDocumenttocTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateTextDocumenttocTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

type AggregateVideoFile {
  """
  Aggregate this property"assetId"
  """
  assetId: AggregateVideoFileassetIdObj

  """
  Aggregate this property"blob"
  """
  blob: AggregateVideoFileblobObj

  """
  Aggregate this property"duration"
  """
  duration: AggregateVideoFiledurationObj

  """
  Aggregate this property"ext"
  """
  ext: AggregateVideoFileextObj

  """Indicates the group of returned data"""
  groupedBy: AggregateVideoFileGroupedByObj

  """
  Aggregate this property"height"
  """
  height: AggregateVideoFileheightObj

  """
  Aggregate this property"hlsUrl"
  """
  hlsUrl: AggregateVideoFilehlsUrlObj

  """
  An object used to Get Meta information about Objects on a local Weaviate
  """
  meta: AggregateVideoFileMetaObject

  """
  Aggregate this property"mimeType"
  """
  mimeType: AggregateVideoFilemimeTypeObj

  """
  Aggregate this property"order"
  """
  order: AggregateVideoFileorderObj

  """
  Aggregate this property"originalName"
  """
  originalName: AggregateVideoFileoriginalNameObj

  """
  Aggregate this property"path"
  """
  path: AggregateVideoFilepathObj

  """
  Aggregate this property"pathString"
  """
  pathString: AggregateVideoFilepathStringObj

  """
  Aggregate this property"playbackId"
  """
  playbackId: AggregateVideoFileplaybackIdObj

  """
  Aggregate this property"remoteId"
  """
  remoteId: AggregateVideoFileremoteIdObj

  """
  Aggregate this property"size"
  """
  size: AggregateVideoFilesizeObj

  """
  Aggregate this property"sourceId"
  """
  sourceId: AggregateVideoFilesourceIdObj

  """
  Aggregate this property"subtitles"
  """
  subtitles: AggregateVideoFilesubtitlesObj

  """
  Aggregate this property"url"
  """
  url: AggregateVideoFileurlObj

  """
  Aggregate this property"width"
  """
  width: AggregateVideoFilewidthObj
}

"""An object containing the path and value of the grouped property"""
type AggregateVideoFileGroupedByObj {
  """The path of the grouped property"""
  path: [String]

  """The value of the grouped property"""
  value: String
}

type AggregateVideoFileMetaObject {
  count: Int
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFileassetIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateVideoFileassetIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateVideoFileassetIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFileblobObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateVideoFileblobTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateVideoFileblobTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFiledurationObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFileextObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateVideoFileextTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateVideoFileextTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFileheightObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFilehlsUrlObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateVideoFilehlsUrlTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateVideoFilehlsUrlTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFilemimeTypeObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateVideoFilemimeTypeTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateVideoFilemimeTypeTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFileorderObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFileoriginalNameObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateVideoFileoriginalNameTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateVideoFileoriginalNameTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFilepathObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateVideoFilepathTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFilepathStringObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateVideoFilepathStringTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateVideoFilepathStringTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateVideoFilepathTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFileplaybackIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateVideoFileplaybackIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateVideoFileplaybackIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFileremoteIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateVideoFileremoteIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateVideoFileremoteIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFilesizeObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFilesourceIdObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateVideoFilesourceIdTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateVideoFilesourceIdTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFilesubtitlesObj {
  """The classes that this object contains a reference to"""
  pointingTo: [String] @deprecated(reason: "Experimental, the format will change")

  """The datatype of this property"""
  type: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFileurlObj {
  """The total amount of found instances for this property"""
  count: Int

  """
  An object containing data about the most frequently occurring values for this property
  """
  topOccurrences(
    """Show the first x results (pagination option)"""
    limit: Int
  ): [AggregateVideoFileurlTopOccurrencesObj]

  """Aggregate on the total amount of found property values"""
  type: String
}

"""
An object containing data about the most frequently occurring values for this property
"""
type AggregateVideoFileurlTopOccurrencesObj {
  """How often the most frequently occurring value for this property occurs"""
  occurs: Int

  """The most frequently occurring value for this property"""
  value: String
}

"""An object containing Aggregation information about this property"""
type AggregateVideoFilewidthObj {
  """Aggregate on the total amount of found property values"""
  count: Int

  """Aggregate on the maximum of numeric property values"""
  maximum: Float

  """Aggregate on the mean of numeric property values"""
  mean: Float

  """Aggregate on the median of numeric property values"""
  median: Float

  """Aggregate on the minimum of numeric property values"""
  minimum: Float

  """Aggregate on the mode of numeric property values"""
  mode: Float

  """Aggregate on the sum of numeric property values"""
  sum: Float

  """Aggregate on the total amount of found property values"""
  type: String
}

type AudioFile {
  _additional: AudioFileAdditional
  assetId: String
  blob: String
  document: [AudioFileDocumentObj]
  duration: Float
  ext: String
  files: [AudioFile_files_object]
  hlsUrl: String
  mimeType: String
  order: Int
  originalName: String
  path: [String]
  pathString: String
  playbackId: String
  remoteId: String
  size: Int
  sourceId: String
  subtitles: [AudioFileSubtitlesObj]
  url: String
}

type AudioFileAdditional {
  certainty: Float
  classification: AudioFileAdditionalClassification
  creationTimeUnix: String
  distance: Float
  explainScore: String
  featureProjection(algorithm: String, dimensions: Int, iterations: Int, learningRate: Int, perplexity: Int): AudioFileAdditionalFeatureProjection
  group: AudioFileAdditionalGroup

  """The UUID of a Object, assigned by its local Weaviate"""
  id: String
  lastUpdateTimeUnix: String
  score: String
  vector: [Float]
}

type AudioFileAdditionalClassification {
  basedOn: [String]
  classifiedFields: [String]
  completed: String
  id: String
  scope: [String]
}

type AudioFileAdditionalFeatureProjection {
  vector: [Float]
}

type AudioFileAdditionalGroup {
  count: Int
  groupedBy: AudioFileAdditionalGroupGroupedBy
  hits: [AudioFileAdditionalGroupHits]
  id: Int
  maxDistance: Float
  minDistance: Float
}

type AudioFileAdditionalGroupGroupedBy {
  path: [String]
  value: String
}

type AudioFileAdditionalGroupHits {
  _additional: AudioFileAdditionalGroupHitsAdditional
  assetId: String
  blob: String
  document: [AudioFileDocumentObj]
  duration: Float
  ext: String
  files: [AudioFile_files_object]
  hlsUrl: String
  mimeType: String
  order: Int
  originalName: String
  path: [String]
  pathString: String
  playbackId: String
  remoteId: String
  size: Int
  sourceId: String
  subtitles: [AudioFileSubtitlesObj]
  url: String
}

type AudioFileAdditionalGroupHitsAdditional {
  distance: Float
  id: String
  vector: [Float]
}

union AudioFileDocumentObj = Beacon | GoogleCalendarEvent | GoogleDoc

union AudioFileSubtitlesObj = Beacon | SubtitleFile

type AudioFile_files_object {
  bitrate: Float
  ext: String
  height: Float
  name: String
  size: Float
  url: String
  width: Float
}

type Beacon {
  beacon: String
}

"""Boolean or Boolean[]"""
scalar BooleanAggregateObjectsAudioFile

"""Boolean or Boolean[]"""
scalar BooleanAggregateObjectsGoogleCalendarEvent

"""Boolean or Boolean[]"""
scalar BooleanAggregateObjectsGoogleDoc

"""Boolean or Boolean[]"""
scalar BooleanAggregateObjectsImageBlock

"""Boolean or Boolean[]"""
scalar BooleanAggregateObjectsSubtitleEntry

"""Boolean or Boolean[]"""
scalar BooleanAggregateObjectsSubtitleFile

"""Boolean or Boolean[]"""
scalar BooleanAggregateObjectsTextBlock

"""Boolean or Boolean[]"""
scalar BooleanAggregateObjectsTextDocument

"""Boolean or Boolean[]"""
scalar BooleanAggregateObjectsVideoFile

"""Boolean or Boolean[]"""
scalar BooleanGetObjectsAudioFile

"""Boolean or Boolean[]"""
scalar BooleanGetObjectsGoogleCalendarEvent

"""Boolean or Boolean[]"""
scalar BooleanGetObjectsGoogleDoc

"""Boolean or Boolean[]"""
scalar BooleanGetObjectsImageBlock

"""Boolean or Boolean[]"""
scalar BooleanGetObjectsSubtitleEntry

"""Boolean or Boolean[]"""
scalar BooleanGetObjectsSubtitleFile

"""Boolean or Boolean[]"""
scalar BooleanGetObjectsTextBlock

"""Boolean or Boolean[]"""
scalar BooleanGetObjectsTextDocument

"""Boolean or Boolean[]"""
scalar BooleanGetObjectsVideoFile

input ExploreNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input ExploreNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  vector: [Float]!
}

"""Explore Concepts on a local weaviate with vector-aided search"""
type ExploreObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """Name of the Class"""
  className: String

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float
}

"""Float or Float[]"""
scalar FloatAggregateObjectsAudioFile

"""Float or Float[]"""
scalar FloatAggregateObjectsGoogleCalendarEvent

"""Float or Float[]"""
scalar FloatAggregateObjectsGoogleDoc

"""Float or Float[]"""
scalar FloatAggregateObjectsImageBlock

"""Float or Float[]"""
scalar FloatAggregateObjectsSubtitleEntry

"""Float or Float[]"""
scalar FloatAggregateObjectsSubtitleFile

"""Float or Float[]"""
scalar FloatAggregateObjectsTextBlock

"""Float or Float[]"""
scalar FloatAggregateObjectsTextDocument

"""Float or Float[]"""
scalar FloatAggregateObjectsVideoFile

"""Float or Float[]"""
scalar FloatGetObjectsAudioFile

"""Float or Float[]"""
scalar FloatGetObjectsGoogleCalendarEvent

"""Float or Float[]"""
scalar FloatGetObjectsGoogleDoc

"""Float or Float[]"""
scalar FloatGetObjectsImageBlock

"""Float or Float[]"""
scalar FloatGetObjectsSubtitleEntry

"""Float or Float[]"""
scalar FloatGetObjectsSubtitleFile

"""Float or Float[]"""
scalar FloatGetObjectsTextBlock

"""Float or Float[]"""
scalar FloatGetObjectsTextDocument

"""Float or Float[]"""
scalar FloatGetObjectsVideoFile

type Footnote {
  id: String!
  index: Int!
  refId: String!
  refValue: String!
  valueHTML: String!
  valueText: String!
}

enum FusionEnum {
  rankedFusion
  relativeScoreFusion
}

"""Specify the property of the class to group by"""
input GetObjectsAudioFileGroupByInpObj {
  """Specify the number of groups to be created"""
  groups: Int!

  """Specify the number of max objects in group"""
  objectsPerGroup: Int!

  """
  Specify the path from the objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsAudioFileGroupInpObj {
  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!
  type: GetObjectsAudioFileGroupInpObjTypeEnum
}

enum GetObjectsAudioFileGroupInpObjTypeEnum {
  closest
  merge
}

input GetObjectsAudioFileHybridGetBm25InpObj {
  """The properties to search in"""
  properties: [String]

  """The query to search for"""
  query: String
}

"""Hybrid search"""
input GetObjectsAudioFileHybridInpObj {
  """Search weight"""
  alpha: Float

  """Algorithm used for fusing results from vector and keyword search"""
  fusionType: FusionEnum

  """Which properties should be included in the sparse search"""
  properties: [String]

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input GetObjectsAudioFileNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input GetObjectsAudioFileNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsAudioFileSortInpObj {
  """
  Specify the sort order, either ascending (asc) which is default or descending (desc)
  """
  order: GetObjectsAudioFileSortInpObjTypeEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Get', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]
}

enum GetObjectsAudioFileSortInpObjTypeEnum {
  asc
  desc
}

input GetObjectsAudioFileWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input GetObjectsAudioFileWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input GetObjectsAudioFileWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: GetObjectsAudioFileWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: GetObjectsAudioFileWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsAudioFileWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsAudioFileWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsAudioFileWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsAudioFile

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsAudioFile

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsAudioFileWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsAudioFile

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsAudioFile

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsAudioFile

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsAudioFile
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input GetObjectsAudioFileWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsAudioFileWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsAudioFileWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsAudioFile

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsAudioFile

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsAudioFileWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsAudioFile

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsAudioFile

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsAudioFile

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsAudioFile
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum GetObjectsAudioFileWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""Specify the property of the class to group by"""
input GetObjectsGoogleCalendarEventGroupByInpObj {
  """Specify the number of groups to be created"""
  groups: Int!

  """Specify the number of max objects in group"""
  objectsPerGroup: Int!

  """
  Specify the path from the objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsGoogleCalendarEventGroupInpObj {
  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!
  type: GetObjectsGoogleCalendarEventGroupInpObjTypeEnum
}

enum GetObjectsGoogleCalendarEventGroupInpObjTypeEnum {
  closest
  merge
}

input GetObjectsGoogleCalendarEventHybridGetBm25InpObj {
  """The properties to search in"""
  properties: [String]

  """The query to search for"""
  query: String
}

"""Hybrid search"""
input GetObjectsGoogleCalendarEventHybridInpObj {
  """Search weight"""
  alpha: Float

  """Algorithm used for fusing results from vector and keyword search"""
  fusionType: FusionEnum

  """Which properties should be included in the sparse search"""
  properties: [String]

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input GetObjectsGoogleCalendarEventNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input GetObjectsGoogleCalendarEventNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsGoogleCalendarEventSortInpObj {
  """
  Specify the sort order, either ascending (asc) which is default or descending (desc)
  """
  order: GetObjectsGoogleCalendarEventSortInpObjTypeEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Get', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]
}

enum GetObjectsGoogleCalendarEventSortInpObjTypeEnum {
  asc
  desc
}

input GetObjectsGoogleCalendarEventWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input GetObjectsGoogleCalendarEventWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input GetObjectsGoogleCalendarEventWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: GetObjectsGoogleCalendarEventWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: GetObjectsGoogleCalendarEventWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsGoogleCalendarEventWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsGoogleCalendarEventWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsGoogleCalendarEventWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsGoogleCalendarEvent

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsGoogleCalendarEvent

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsGoogleCalendarEventWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsGoogleCalendarEvent

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsGoogleCalendarEvent

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsGoogleCalendarEvent

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsGoogleCalendarEvent
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input GetObjectsGoogleCalendarEventWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsGoogleCalendarEventWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsGoogleCalendarEventWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsGoogleCalendarEvent

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsGoogleCalendarEvent

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsGoogleCalendarEventWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsGoogleCalendarEvent

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsGoogleCalendarEvent

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsGoogleCalendarEvent

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsGoogleCalendarEvent
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum GetObjectsGoogleCalendarEventWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""Specify the property of the class to group by"""
input GetObjectsGoogleDocGroupByInpObj {
  """Specify the number of groups to be created"""
  groups: Int!

  """Specify the number of max objects in group"""
  objectsPerGroup: Int!

  """
  Specify the path from the objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsGoogleDocGroupInpObj {
  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!
  type: GetObjectsGoogleDocGroupInpObjTypeEnum
}

enum GetObjectsGoogleDocGroupInpObjTypeEnum {
  closest
  merge
}

input GetObjectsGoogleDocHybridGetBm25InpObj {
  """The properties to search in"""
  properties: [String]

  """The query to search for"""
  query: String
}

"""Hybrid search"""
input GetObjectsGoogleDocHybridInpObj {
  """Search weight"""
  alpha: Float

  """Algorithm used for fusing results from vector and keyword search"""
  fusionType: FusionEnum

  """Which properties should be included in the sparse search"""
  properties: [String]

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input GetObjectsGoogleDocNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input GetObjectsGoogleDocNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsGoogleDocSortInpObj {
  """
  Specify the sort order, either ascending (asc) which is default or descending (desc)
  """
  order: GetObjectsGoogleDocSortInpObjTypeEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Get', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]
}

enum GetObjectsGoogleDocSortInpObjTypeEnum {
  asc
  desc
}

input GetObjectsGoogleDocWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input GetObjectsGoogleDocWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input GetObjectsGoogleDocWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: GetObjectsGoogleDocWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: GetObjectsGoogleDocWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsGoogleDocWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsGoogleDocWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsGoogleDocWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsGoogleDoc

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsGoogleDoc

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsGoogleDocWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsGoogleDoc

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsGoogleDoc

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsGoogleDoc

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsGoogleDoc
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input GetObjectsGoogleDocWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsGoogleDocWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsGoogleDocWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsGoogleDoc

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsGoogleDoc

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsGoogleDocWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsGoogleDoc

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsGoogleDoc

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsGoogleDoc

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsGoogleDoc
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum GetObjectsGoogleDocWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""Specify the property of the class to group by"""
input GetObjectsImageBlockGroupByInpObj {
  """Specify the number of groups to be created"""
  groups: Int!

  """Specify the number of max objects in group"""
  objectsPerGroup: Int!

  """
  Specify the path from the objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsImageBlockGroupInpObj {
  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!
  type: GetObjectsImageBlockGroupInpObjTypeEnum
}

enum GetObjectsImageBlockGroupInpObjTypeEnum {
  closest
  merge
}

input GetObjectsImageBlockHybridGetBm25InpObj {
  """The properties to search in"""
  properties: [String]

  """The query to search for"""
  query: String
}

"""Hybrid search"""
input GetObjectsImageBlockHybridInpObj {
  """Search weight"""
  alpha: Float

  """Algorithm used for fusing results from vector and keyword search"""
  fusionType: FusionEnum

  """Which properties should be included in the sparse search"""
  properties: [String]

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input GetObjectsImageBlockNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input GetObjectsImageBlockNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsImageBlockSortInpObj {
  """
  Specify the sort order, either ascending (asc) which is default or descending (desc)
  """
  order: GetObjectsImageBlockSortInpObjTypeEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Get', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]
}

enum GetObjectsImageBlockSortInpObjTypeEnum {
  asc
  desc
}

input GetObjectsImageBlockWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input GetObjectsImageBlockWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input GetObjectsImageBlockWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: GetObjectsImageBlockWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: GetObjectsImageBlockWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsImageBlockWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsImageBlockWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsImageBlockWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsImageBlock

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsImageBlock

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsImageBlockWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsImageBlock

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsImageBlock

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsImageBlock

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsImageBlock
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input GetObjectsImageBlockWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsImageBlockWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsImageBlockWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsImageBlock

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsImageBlock

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsImageBlockWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsImageBlock

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsImageBlock

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsImageBlock

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsImageBlock
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum GetObjectsImageBlockWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""An object used to get %ss on a local Weaviate"""
type GetObjectsObj {
  AudioFile(
    """Show the results after a given ID"""
    after: String

    """
    Cut off number of results after the Nth extrema. Off by default, negative numbers mean off.
    """
    autocut: Int
    bm25: GetObjectsAudioFileHybridGetBm25InpObj
    group: GetObjectsAudioFileGroupInpObj
    groupBy: GetObjectsAudioFileGroupByInpObj
    hybrid: GetObjectsAudioFileHybridInpObj

    """Limit the results set (usually fewer results mean faster queries)"""
    limit: Int
    nearObject: GetObjectsAudioFileNearObjectInpObj
    nearText: Txt2VecC11yGetObjectsAudioFileNearTextInpObj
    nearVector: GetObjectsAudioFileNearVectorInpObj

    """Show the results after the first x results (pagination option)"""
    offset: Int
    sort: [GetObjectsAudioFileSortInpObj]

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: GetObjectsAudioFileWhereInpObj
  ): [AudioFile]
  GoogleCalendarEvent(
    """Show the results after a given ID"""
    after: String

    """
    Cut off number of results after the Nth extrema. Off by default, negative numbers mean off.
    """
    autocut: Int
    bm25: GetObjectsGoogleCalendarEventHybridGetBm25InpObj
    group: GetObjectsGoogleCalendarEventGroupInpObj
    groupBy: GetObjectsGoogleCalendarEventGroupByInpObj
    hybrid: GetObjectsGoogleCalendarEventHybridInpObj

    """Limit the results set (usually fewer results mean faster queries)"""
    limit: Int
    nearObject: GetObjectsGoogleCalendarEventNearObjectInpObj
    nearText: Txt2VecC11yGetObjectsGoogleCalendarEventNearTextInpObj
    nearVector: GetObjectsGoogleCalendarEventNearVectorInpObj

    """Show the results after the first x results (pagination option)"""
    offset: Int
    sort: [GetObjectsGoogleCalendarEventSortInpObj]

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: GetObjectsGoogleCalendarEventWhereInpObj
  ): [GoogleCalendarEvent]
  GoogleDoc(
    """Show the results after a given ID"""
    after: String

    """
    Cut off number of results after the Nth extrema. Off by default, negative numbers mean off.
    """
    autocut: Int
    bm25: GetObjectsGoogleDocHybridGetBm25InpObj
    group: GetObjectsGoogleDocGroupInpObj
    groupBy: GetObjectsGoogleDocGroupByInpObj
    hybrid: GetObjectsGoogleDocHybridInpObj

    """Limit the results set (usually fewer results mean faster queries)"""
    limit: Int
    nearObject: GetObjectsGoogleDocNearObjectInpObj
    nearText: Txt2VecC11yGetObjectsGoogleDocNearTextInpObj
    nearVector: GetObjectsGoogleDocNearVectorInpObj

    """Show the results after the first x results (pagination option)"""
    offset: Int
    sort: [GetObjectsGoogleDocSortInpObj]

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: GetObjectsGoogleDocWhereInpObj
  ): [GoogleDoc]
  ImageBlock(
    """Show the results after a given ID"""
    after: String

    """
    Cut off number of results after the Nth extrema. Off by default, negative numbers mean off.
    """
    autocut: Int
    bm25: GetObjectsImageBlockHybridGetBm25InpObj
    group: GetObjectsImageBlockGroupInpObj
    groupBy: GetObjectsImageBlockGroupByInpObj
    hybrid: GetObjectsImageBlockHybridInpObj

    """Limit the results set (usually fewer results mean faster queries)"""
    limit: Int
    nearObject: GetObjectsImageBlockNearObjectInpObj
    nearText: Txt2VecC11yGetObjectsImageBlockNearTextInpObj
    nearVector: GetObjectsImageBlockNearVectorInpObj

    """Show the results after the first x results (pagination option)"""
    offset: Int
    sort: [GetObjectsImageBlockSortInpObj]

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: GetObjectsImageBlockWhereInpObj
  ): [ImageBlock]
  SubtitleEntry(
    """Show the results after a given ID"""
    after: String

    """
    Cut off number of results after the Nth extrema. Off by default, negative numbers mean off.
    """
    autocut: Int
    bm25: GetObjectsSubtitleEntryHybridGetBm25InpObj
    group: GetObjectsSubtitleEntryGroupInpObj
    groupBy: GetObjectsSubtitleEntryGroupByInpObj
    hybrid: GetObjectsSubtitleEntryHybridInpObj

    """Limit the results set (usually fewer results mean faster queries)"""
    limit: Int
    nearObject: GetObjectsSubtitleEntryNearObjectInpObj
    nearText: Txt2VecC11yGetObjectsSubtitleEntryNearTextInpObj
    nearVector: GetObjectsSubtitleEntryNearVectorInpObj

    """Show the results after the first x results (pagination option)"""
    offset: Int
    sort: [GetObjectsSubtitleEntrySortInpObj]

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: GetObjectsSubtitleEntryWhereInpObj
  ): [SubtitleEntry]
  SubtitleFile(
    """Show the results after a given ID"""
    after: String

    """
    Cut off number of results after the Nth extrema. Off by default, negative numbers mean off.
    """
    autocut: Int
    bm25: GetObjectsSubtitleFileHybridGetBm25InpObj
    group: GetObjectsSubtitleFileGroupInpObj
    groupBy: GetObjectsSubtitleFileGroupByInpObj
    hybrid: GetObjectsSubtitleFileHybridInpObj

    """Limit the results set (usually fewer results mean faster queries)"""
    limit: Int
    nearObject: GetObjectsSubtitleFileNearObjectInpObj
    nearText: Txt2VecC11yGetObjectsSubtitleFileNearTextInpObj
    nearVector: GetObjectsSubtitleFileNearVectorInpObj

    """Show the results after the first x results (pagination option)"""
    offset: Int
    sort: [GetObjectsSubtitleFileSortInpObj]

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: GetObjectsSubtitleFileWhereInpObj
  ): [SubtitleFile]
  TextBlock(
    """Show the results after a given ID"""
    after: String

    """
    Cut off number of results after the Nth extrema. Off by default, negative numbers mean off.
    """
    autocut: Int
    bm25: GetObjectsTextBlockHybridGetBm25InpObj
    group: GetObjectsTextBlockGroupInpObj
    groupBy: GetObjectsTextBlockGroupByInpObj
    hybrid: GetObjectsTextBlockHybridInpObj

    """Limit the results set (usually fewer results mean faster queries)"""
    limit: Int
    nearObject: GetObjectsTextBlockNearObjectInpObj
    nearText: Txt2VecC11yGetObjectsTextBlockNearTextInpObj
    nearVector: GetObjectsTextBlockNearVectorInpObj

    """Show the results after the first x results (pagination option)"""
    offset: Int
    sort: [GetObjectsTextBlockSortInpObj]

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: GetObjectsTextBlockWhereInpObj
  ): [TextBlock]
  TextDocument(
    """Show the results after a given ID"""
    after: String

    """
    Cut off number of results after the Nth extrema. Off by default, negative numbers mean off.
    """
    autocut: Int
    bm25: GetObjectsTextDocumentHybridGetBm25InpObj
    group: GetObjectsTextDocumentGroupInpObj
    groupBy: GetObjectsTextDocumentGroupByInpObj
    hybrid: GetObjectsTextDocumentHybridInpObj

    """Limit the results set (usually fewer results mean faster queries)"""
    limit: Int
    nearObject: GetObjectsTextDocumentNearObjectInpObj
    nearText: Txt2VecC11yGetObjectsTextDocumentNearTextInpObj
    nearVector: GetObjectsTextDocumentNearVectorInpObj

    """Show the results after the first x results (pagination option)"""
    offset: Int
    sort: [GetObjectsTextDocumentSortInpObj]

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: GetObjectsTextDocumentWhereInpObj
  ): [TextDocument]
  VideoFile(
    """Show the results after a given ID"""
    after: String

    """
    Cut off number of results after the Nth extrema. Off by default, negative numbers mean off.
    """
    autocut: Int
    bm25: GetObjectsVideoFileHybridGetBm25InpObj
    group: GetObjectsVideoFileGroupInpObj
    groupBy: GetObjectsVideoFileGroupByInpObj
    hybrid: GetObjectsVideoFileHybridInpObj

    """Limit the results set (usually fewer results mean faster queries)"""
    limit: Int
    nearObject: GetObjectsVideoFileNearObjectInpObj
    nearText: Txt2VecC11yGetObjectsVideoFileNearTextInpObj
    nearVector: GetObjectsVideoFileNearVectorInpObj

    """Show the results after the first x results (pagination option)"""
    offset: Int
    sort: [GetObjectsVideoFileSortInpObj]

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: GetObjectsVideoFileWhereInpObj
  ): [VideoFile]
}

"""Specify the property of the class to group by"""
input GetObjectsSubtitleEntryGroupByInpObj {
  """Specify the number of groups to be created"""
  groups: Int!

  """Specify the number of max objects in group"""
  objectsPerGroup: Int!

  """
  Specify the path from the objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsSubtitleEntryGroupInpObj {
  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!
  type: GetObjectsSubtitleEntryGroupInpObjTypeEnum
}

enum GetObjectsSubtitleEntryGroupInpObjTypeEnum {
  closest
  merge
}

input GetObjectsSubtitleEntryHybridGetBm25InpObj {
  """The properties to search in"""
  properties: [String]

  """The query to search for"""
  query: String
}

"""Hybrid search"""
input GetObjectsSubtitleEntryHybridInpObj {
  """Search weight"""
  alpha: Float

  """Algorithm used for fusing results from vector and keyword search"""
  fusionType: FusionEnum

  """Which properties should be included in the sparse search"""
  properties: [String]

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input GetObjectsSubtitleEntryNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input GetObjectsSubtitleEntryNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsSubtitleEntrySortInpObj {
  """
  Specify the sort order, either ascending (asc) which is default or descending (desc)
  """
  order: GetObjectsSubtitleEntrySortInpObjTypeEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Get', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]
}

enum GetObjectsSubtitleEntrySortInpObjTypeEnum {
  asc
  desc
}

input GetObjectsSubtitleEntryWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input GetObjectsSubtitleEntryWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input GetObjectsSubtitleEntryWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: GetObjectsSubtitleEntryWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: GetObjectsSubtitleEntryWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsSubtitleEntryWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsSubtitleEntryWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsSubtitleEntryWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsSubtitleEntry

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsSubtitleEntry

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsSubtitleEntryWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsSubtitleEntry

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsSubtitleEntry

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsSubtitleEntry

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsSubtitleEntry
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input GetObjectsSubtitleEntryWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsSubtitleEntryWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsSubtitleEntryWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsSubtitleEntry

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsSubtitleEntry

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsSubtitleEntryWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsSubtitleEntry

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsSubtitleEntry

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsSubtitleEntry

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsSubtitleEntry
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum GetObjectsSubtitleEntryWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""Specify the property of the class to group by"""
input GetObjectsSubtitleFileGroupByInpObj {
  """Specify the number of groups to be created"""
  groups: Int!

  """Specify the number of max objects in group"""
  objectsPerGroup: Int!

  """
  Specify the path from the objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsSubtitleFileGroupInpObj {
  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!
  type: GetObjectsSubtitleFileGroupInpObjTypeEnum
}

enum GetObjectsSubtitleFileGroupInpObjTypeEnum {
  closest
  merge
}

input GetObjectsSubtitleFileHybridGetBm25InpObj {
  """The properties to search in"""
  properties: [String]

  """The query to search for"""
  query: String
}

"""Hybrid search"""
input GetObjectsSubtitleFileHybridInpObj {
  """Search weight"""
  alpha: Float

  """Algorithm used for fusing results from vector and keyword search"""
  fusionType: FusionEnum

  """Which properties should be included in the sparse search"""
  properties: [String]

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input GetObjectsSubtitleFileNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input GetObjectsSubtitleFileNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsSubtitleFileSortInpObj {
  """
  Specify the sort order, either ascending (asc) which is default or descending (desc)
  """
  order: GetObjectsSubtitleFileSortInpObjTypeEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Get', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]
}

enum GetObjectsSubtitleFileSortInpObjTypeEnum {
  asc
  desc
}

input GetObjectsSubtitleFileWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input GetObjectsSubtitleFileWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input GetObjectsSubtitleFileWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: GetObjectsSubtitleFileWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: GetObjectsSubtitleFileWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsSubtitleFileWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsSubtitleFileWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsSubtitleFileWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsSubtitleFile

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsSubtitleFile

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsSubtitleFileWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsSubtitleFile

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsSubtitleFile

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsSubtitleFile

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsSubtitleFile
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input GetObjectsSubtitleFileWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsSubtitleFileWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsSubtitleFileWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsSubtitleFile

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsSubtitleFile

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsSubtitleFileWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsSubtitleFile

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsSubtitleFile

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsSubtitleFile

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsSubtitleFile
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum GetObjectsSubtitleFileWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""Specify the property of the class to group by"""
input GetObjectsTextBlockGroupByInpObj {
  """Specify the number of groups to be created"""
  groups: Int!

  """Specify the number of max objects in group"""
  objectsPerGroup: Int!

  """
  Specify the path from the objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsTextBlockGroupInpObj {
  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!
  type: GetObjectsTextBlockGroupInpObjTypeEnum
}

enum GetObjectsTextBlockGroupInpObjTypeEnum {
  closest
  merge
}

input GetObjectsTextBlockHybridGetBm25InpObj {
  """The properties to search in"""
  properties: [String]

  """The query to search for"""
  query: String
}

"""Hybrid search"""
input GetObjectsTextBlockHybridInpObj {
  """Search weight"""
  alpha: Float

  """Algorithm used for fusing results from vector and keyword search"""
  fusionType: FusionEnum

  """Which properties should be included in the sparse search"""
  properties: [String]

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input GetObjectsTextBlockNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input GetObjectsTextBlockNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsTextBlockSortInpObj {
  """
  Specify the sort order, either ascending (asc) which is default or descending (desc)
  """
  order: GetObjectsTextBlockSortInpObjTypeEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Get', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]
}

enum GetObjectsTextBlockSortInpObjTypeEnum {
  asc
  desc
}

input GetObjectsTextBlockWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input GetObjectsTextBlockWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input GetObjectsTextBlockWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: GetObjectsTextBlockWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: GetObjectsTextBlockWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsTextBlockWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsTextBlockWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsTextBlockWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsTextBlock

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsTextBlock

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsTextBlockWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsTextBlock

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsTextBlock

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsTextBlock

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsTextBlock
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input GetObjectsTextBlockWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsTextBlockWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsTextBlockWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsTextBlock

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsTextBlock

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsTextBlockWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsTextBlock

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsTextBlock

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsTextBlock

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsTextBlock
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum GetObjectsTextBlockWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""Specify the property of the class to group by"""
input GetObjectsTextDocumentGroupByInpObj {
  """Specify the number of groups to be created"""
  groups: Int!

  """Specify the number of max objects in group"""
  objectsPerGroup: Int!

  """
  Specify the path from the objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsTextDocumentGroupInpObj {
  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!
  type: GetObjectsTextDocumentGroupInpObjTypeEnum
}

enum GetObjectsTextDocumentGroupInpObjTypeEnum {
  closest
  merge
}

input GetObjectsTextDocumentHybridGetBm25InpObj {
  """The properties to search in"""
  properties: [String]

  """The query to search for"""
  query: String
}

"""Hybrid search"""
input GetObjectsTextDocumentHybridInpObj {
  """Search weight"""
  alpha: Float

  """Algorithm used for fusing results from vector and keyword search"""
  fusionType: FusionEnum

  """Which properties should be included in the sparse search"""
  properties: [String]

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input GetObjectsTextDocumentNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input GetObjectsTextDocumentNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsTextDocumentSortInpObj {
  """
  Specify the sort order, either ascending (asc) which is default or descending (desc)
  """
  order: GetObjectsTextDocumentSortInpObjTypeEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Get', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]
}

enum GetObjectsTextDocumentSortInpObjTypeEnum {
  asc
  desc
}

input GetObjectsTextDocumentWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input GetObjectsTextDocumentWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input GetObjectsTextDocumentWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: GetObjectsTextDocumentWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: GetObjectsTextDocumentWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsTextDocumentWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsTextDocumentWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsTextDocumentWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsTextDocument

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsTextDocument

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsTextDocumentWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsTextDocument

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsTextDocument

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsTextDocument

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsTextDocument
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input GetObjectsTextDocumentWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsTextDocumentWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsTextDocumentWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsTextDocument

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsTextDocument

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsTextDocumentWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsTextDocument

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsTextDocument

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsTextDocument

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsTextDocument
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum GetObjectsTextDocumentWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

"""Specify the property of the class to group by"""
input GetObjectsVideoFileGroupByInpObj {
  """Specify the number of groups to be created"""
  groups: Int!

  """Specify the number of max objects in group"""
  objectsPerGroup: Int!

  """
  Specify the path from the objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsVideoFileGroupInpObj {
  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!
  type: GetObjectsVideoFileGroupInpObjTypeEnum
}

enum GetObjectsVideoFileGroupInpObjTypeEnum {
  closest
  merge
}

input GetObjectsVideoFileHybridGetBm25InpObj {
  """The properties to search in"""
  properties: [String]

  """The query to search for"""
  query: String
}

"""Hybrid search"""
input GetObjectsVideoFileHybridInpObj {
  """Search weight"""
  alpha: Float

  """Algorithm used for fusing results from vector and keyword search"""
  fusionType: FusionEnum

  """Which properties should be included in the sparse search"""
  properties: [String]

  """Query string"""
  query: String

  """Vector search"""
  vector: [Float]
}

input GetObjectsVideoFileNearObjectInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Concept identifier in the uuid format"""
  id: String
}

input GetObjectsVideoFileNearVectorInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """Target vector to be used in kNN search"""
  vector: [Float]!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsVideoFileSortInpObj {
  """
  Specify the sort order, either ascending (asc) which is default or descending (desc)
  """
  order: GetObjectsVideoFileSortInpObjTypeEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Get', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]
}

enum GetObjectsVideoFileSortInpObjTypeEnum {
  asc
  desc
}

input GetObjectsVideoFileWhereGeoRangeDistanceInpObj {
  """The maximum distance from the point specified geoCoordinates."""
  max: Float!
}

input GetObjectsVideoFileWhereGeoRangeGeoCoordinatesInpObj {
  """
  The latitude (in decimal format) of the geoCoordinates to search around.
  """
  latitude: Float!

  """
  The longitude (in decimal format) of the geoCoordinates to search around.
  """
  longitude: Float!
}

input GetObjectsVideoFileWhereGeoRangeInpObj {
  """The distance from the point specified via geoCoordinates."""
  distance: GetObjectsVideoFileWhereGeoRangeDistanceInpObj!

  """The geoCoordinates that form the center point of the search."""
  geoCoordinates: GetObjectsVideoFileWhereGeoRangeGeoCoordinatesInpObj!
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsVideoFileWhereInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsVideoFileWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsVideoFileWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsVideoFile

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsVideoFile

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsVideoFileWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsVideoFile

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsVideoFile

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsVideoFile

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsVideoFile
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input GetObjectsVideoFileWhereOperandsInpObj {
  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsVideoFileWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsVideoFileWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsVideoFile

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsVideoFile

  """
  Specify both geo-coordinates (latitude and longitude as decimals) and a maximum distance from the described coordinates. The search will return any result which is located less than or equal to the specified maximum distance in km away from the specified point.
  """
  valueGeoRange: GetObjectsVideoFileWhereGeoRangeInpObj

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsVideoFile

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsVideoFile

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsVideoFile

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsVideoFile
}

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum GetObjectsVideoFileWhereOperatorEnum {
  And
  ContainsAll
  ContainsAny
  Equal
  GreaterThan
  GreaterThanEqual
  IsNull
  LessThan
  LessThanEqual
  Like
  Not
  NotEqual
  Or
  WithinGeoRange
}

type GoogleCalendarEvent {
  _additional: GoogleCalendarEventAdditional
  attachments: [GoogleCalendarEventAttachmentsObj]
  createdAt: String
  creatorDisplayName: String
  creatorEmail: String
  creatorId: String
  creatorSelf: Boolean
  descriptionHtml: String
  descriptionText: String
  end: String
  htmlLink: String
  location: String
  organizerDisplayName: String
  organizerEmail: String
  organizerId: String
  organizerSelf: Boolean
  recurrence: [String]
  remoteId: String
  sequence: Int
  sourceId: String
  start: String
  status: String
  summary: String
  title: String
  updatedAt: String
}

type GoogleCalendarEventAdditional {
  certainty: Float
  classification: GoogleCalendarEventAdditionalClassification
  creationTimeUnix: String
  distance: Float
  explainScore: String
  featureProjection(algorithm: String, dimensions: Int, iterations: Int, learningRate: Int, perplexity: Int): GoogleCalendarEventAdditionalFeatureProjection
  group: GoogleCalendarEventAdditionalGroup

  """The UUID of a Object, assigned by its local Weaviate"""
  id: String
  lastUpdateTimeUnix: String
  score: String
  vector: [Float]
}

type GoogleCalendarEventAdditionalClassification {
  basedOn: [String]
  classifiedFields: [String]
  completed: String
  id: String
  scope: [String]
}

type GoogleCalendarEventAdditionalFeatureProjection {
  vector: [Float]
}

type GoogleCalendarEventAdditionalGroup {
  count: Int
  groupedBy: GoogleCalendarEventAdditionalGroupGroupedBy
  hits: [GoogleCalendarEventAdditionalGroupHits]
  id: Int
  maxDistance: Float
  minDistance: Float
}

type GoogleCalendarEventAdditionalGroupGroupedBy {
  path: [String]
  value: String
}

type GoogleCalendarEventAdditionalGroupHits {
  _additional: GoogleCalendarEventAdditionalGroupHitsAdditional
  attachments: [GoogleCalendarEventAttachmentsObj]
  createdAt: String
  creatorDisplayName: String
  creatorEmail: String
  creatorId: String
  creatorSelf: Boolean
  descriptionHtml: String
  descriptionText: String
  end: String
  htmlLink: String
  location: String
  organizerDisplayName: String
  organizerEmail: String
  organizerId: String
  organizerSelf: Boolean
  recurrence: [String]
  remoteId: String
  sequence: Int
  sourceId: String
  start: String
  status: String
  summary: String
  title: String
  updatedAt: String
}

type GoogleCalendarEventAdditionalGroupHitsAdditional {
  distance: Float
  id: String
  vector: [Float]
}

union GoogleCalendarEventAttachmentsObj = AudioFile | Beacon | ImageBlock

type GoogleDoc {
  _additional: GoogleDocAdditional
  blocks: [GoogleDocBlocksObj]
  createdAt: String
  html: String
  mentions: String
  mentionsObj: [Mention]!
  mimeType: String
  modifiedAt: String
  originalName: String
  path: [String]
  pathString: String
  remoteId: String
  size: Int
  slug: String
  sourceId: String
  subtitle: String
  summary: String
  tags: [String]
  text: String
  title: String
  toc: String
  tocObj: [TocItem]!
}

type GoogleDocAdditional {
  certainty: Float
  classification: GoogleDocAdditionalClassification
  creationTimeUnix: String
  distance: Float
  explainScore: String
  featureProjection(algorithm: String, dimensions: Int, iterations: Int, learningRate: Int, perplexity: Int): GoogleDocAdditionalFeatureProjection
  group: GoogleDocAdditionalGroup

  """The UUID of a Object, assigned by its local Weaviate"""
  id: String
  lastUpdateTimeUnix: String
  score: String
  vector: [Float]
}

type GoogleDocAdditionalClassification {
  basedOn: [String]
  classifiedFields: [String]
  completed: String
  id: String
  scope: [String]
}

type GoogleDocAdditionalFeatureProjection {
  vector: [Float]
}

type GoogleDocAdditionalGroup {
  count: Int
  groupedBy: GoogleDocAdditionalGroupGroupedBy
  hits: [GoogleDocAdditionalGroupHits]
  id: Int
  maxDistance: Float
  minDistance: Float
}

type GoogleDocAdditionalGroupGroupedBy {
  path: [String]
  value: String
}

type GoogleDocAdditionalGroupHits {
  _additional: GoogleDocAdditionalGroupHitsAdditional
  blocks: [GoogleDocBlocksObj]
  createdAt: String
  html: String
  mentions: String
  mimeType: String
  modifiedAt: String
  originalName: String
  path: [String]
  pathString: String
  remoteId: String
  size: Int
  slug: String
  sourceId: String
  subtitle: String
  summary: String
  tags: [String]
  text: String
  title: String
  toc: String
}

type GoogleDocAdditionalGroupHitsAdditional {
  distance: Float
  id: String
  vector: [Float]
}

union GoogleDocBlocksObj = Beacon | ImageBlock | TextBlock

type ImageBlock {
  _additional: ImageBlockAdditional
  alt: String
  blob: String
  createdAt: String
  document: [ImageBlockDocumentObj]
  ext: String
  height: Int
  mimeType: String
  modifiedAt: String
  order: Int
  originalName: String
  path: [String]
  pathString: String
  remoteId: String
  size: Int
  sourceId: String
  title: String
  url: String
  width: Int
}

type ImageBlockAdditional {
  certainty: Float
  classification: ImageBlockAdditionalClassification
  creationTimeUnix: String
  distance: Float
  explainScore: String
  featureProjection(algorithm: String, dimensions: Int, iterations: Int, learningRate: Int, perplexity: Int): ImageBlockAdditionalFeatureProjection
  group: ImageBlockAdditionalGroup

  """The UUID of a Object, assigned by its local Weaviate"""
  id: String
  lastUpdateTimeUnix: String
  score: String
  vector: [Float]
}

type ImageBlockAdditionalClassification {
  basedOn: [String]
  classifiedFields: [String]
  completed: String
  id: String
  scope: [String]
}

type ImageBlockAdditionalFeatureProjection {
  vector: [Float]
}

type ImageBlockAdditionalGroup {
  count: Int
  groupedBy: ImageBlockAdditionalGroupGroupedBy
  hits: [ImageBlockAdditionalGroupHits]
  id: Int
  maxDistance: Float
  minDistance: Float
}

type ImageBlockAdditionalGroupGroupedBy {
  path: [String]
  value: String
}

type ImageBlockAdditionalGroupHits {
  _additional: ImageBlockAdditionalGroupHitsAdditional
  alt: String
  blob: String
  createdAt: String
  document: [ImageBlockDocumentObj]
  ext: String
  height: Int
  mimeType: String
  modifiedAt: String
  order: Int
  originalName: String
  path: [String]
  pathString: String
  remoteId: String
  size: Int
  sourceId: String
  title: String
  url: String
  width: Int
}

type ImageBlockAdditionalGroupHitsAdditional {
  distance: Float
  id: String
  vector: [Float]
}

union ImageBlockDocumentObj = Beacon | GoogleCalendarEvent | GoogleDoc | TextDocument

"""Int or Int[]"""
scalar IntAggregateObjectsAudioFile

"""Int or Int[]"""
scalar IntAggregateObjectsGoogleCalendarEvent

"""Int or Int[]"""
scalar IntAggregateObjectsGoogleDoc

"""Int or Int[]"""
scalar IntAggregateObjectsImageBlock

"""Int or Int[]"""
scalar IntAggregateObjectsSubtitleEntry

"""Int or Int[]"""
scalar IntAggregateObjectsSubtitleFile

"""Int or Int[]"""
scalar IntAggregateObjectsTextBlock

"""Int or Int[]"""
scalar IntAggregateObjectsTextDocument

"""Int or Int[]"""
scalar IntAggregateObjectsVideoFile

"""Int or Int[]"""
scalar IntGetObjectsAudioFile

"""Int or Int[]"""
scalar IntGetObjectsGoogleCalendarEvent

"""Int or Int[]"""
scalar IntGetObjectsGoogleDoc

"""Int or Int[]"""
scalar IntGetObjectsImageBlock

"""Int or Int[]"""
scalar IntGetObjectsSubtitleEntry

"""Int or Int[]"""
scalar IntGetObjectsSubtitleFile

"""Int or Int[]"""
scalar IntGetObjectsTextBlock

"""Int or Int[]"""
scalar IntGetObjectsTextDocument

"""Int or Int[]"""
scalar IntGetObjectsVideoFile

type Mention {
  emailAddress: String!
  name: String!
}

type SubtitleEntry {
  _additional: SubtitleEntryAdditional
  document: [SubtitleEntryDocumentObj]
  end: String
  order: Int
  remoteId: String
  sourceId: String
  start: String
  text: String
}

type SubtitleEntryAdditional {
  certainty: Float
  classification: SubtitleEntryAdditionalClassification
  creationTimeUnix: String
  distance: Float
  explainScore: String
  featureProjection(algorithm: String, dimensions: Int, iterations: Int, learningRate: Int, perplexity: Int): SubtitleEntryAdditionalFeatureProjection
  group: SubtitleEntryAdditionalGroup

  """The UUID of a Object, assigned by its local Weaviate"""
  id: String
  lastUpdateTimeUnix: String
  score: String
  vector: [Float]
}

type SubtitleEntryAdditionalClassification {
  basedOn: [String]
  classifiedFields: [String]
  completed: String
  id: String
  scope: [String]
}

type SubtitleEntryAdditionalFeatureProjection {
  vector: [Float]
}

type SubtitleEntryAdditionalGroup {
  count: Int
  groupedBy: SubtitleEntryAdditionalGroupGroupedBy
  hits: [SubtitleEntryAdditionalGroupHits]
  id: Int
  maxDistance: Float
  minDistance: Float
}

type SubtitleEntryAdditionalGroupGroupedBy {
  path: [String]
  value: String
}

type SubtitleEntryAdditionalGroupHits {
  _additional: SubtitleEntryAdditionalGroupHitsAdditional
  document: [SubtitleEntryDocumentObj]
  end: String
  order: Int
  remoteId: String
  sourceId: String
  start: String
  text: String
}

type SubtitleEntryAdditionalGroupHitsAdditional {
  distance: Float
  id: String
  vector: [Float]
}

union SubtitleEntryDocumentObj = Beacon | SubtitleFile

type SubtitleFile {
  _additional: SubtitleFileAdditional
  autogenerated: Boolean
  createdAt: String
  entries: [SubtitleFileEntriesObj]
  format: String
  language: String
  media: [SubtitleFileMediaObj]
  mimeType: String
  modifiedAt: String
  originalName: String
  path: [String]
  pathString: String
  remoteId: String
  size: Int
  sourceId: String
  url: String
}

type SubtitleFileAdditional {
  certainty: Float
  classification: SubtitleFileAdditionalClassification
  creationTimeUnix: String
  distance: Float
  explainScore: String
  featureProjection(algorithm: String, dimensions: Int, iterations: Int, learningRate: Int, perplexity: Int): SubtitleFileAdditionalFeatureProjection
  group: SubtitleFileAdditionalGroup

  """The UUID of a Object, assigned by its local Weaviate"""
  id: String
  lastUpdateTimeUnix: String
  score: String
  vector: [Float]
}

type SubtitleFileAdditionalClassification {
  basedOn: [String]
  classifiedFields: [String]
  completed: String
  id: String
  scope: [String]
}

type SubtitleFileAdditionalFeatureProjection {
  vector: [Float]
}

type SubtitleFileAdditionalGroup {
  count: Int
  groupedBy: SubtitleFileAdditionalGroupGroupedBy
  hits: [SubtitleFileAdditionalGroupHits]
  id: Int
  maxDistance: Float
  minDistance: Float
}

type SubtitleFileAdditionalGroupGroupedBy {
  path: [String]
  value: String
}

type SubtitleFileAdditionalGroupHits {
  _additional: SubtitleFileAdditionalGroupHitsAdditional
  autogenerated: Boolean
  createdAt: String
  entries: [SubtitleFileEntriesObj]
  format: String
  language: String
  media: [SubtitleFileMediaObj]
  mimeType: String
  modifiedAt: String
  originalName: String
  path: [String]
  pathString: String
  remoteId: String
  size: Int
  sourceId: String
  url: String
}

type SubtitleFileAdditionalGroupHitsAdditional {
  distance: Float
  id: String
  vector: [Float]
}

union SubtitleFileEntriesObj = Beacon | SubtitleEntry

union SubtitleFileMediaObj = AudioFile | Beacon | VideoFile

"""String or String[]"""
scalar TextAggregateObjectsAudioFile

"""String or String[]"""
scalar TextAggregateObjectsGoogleCalendarEvent

"""String or String[]"""
scalar TextAggregateObjectsGoogleDoc

"""String or String[]"""
scalar TextAggregateObjectsImageBlock

"""String or String[]"""
scalar TextAggregateObjectsSubtitleEntry

"""String or String[]"""
scalar TextAggregateObjectsSubtitleFile

"""String or String[]"""
scalar TextAggregateObjectsTextBlock

"""String or String[]"""
scalar TextAggregateObjectsTextDocument

"""String or String[]"""
scalar TextAggregateObjectsVideoFile

type TextBlock {
  _additional: TextBlockAdditional
  classNames: [String]
  document: [TextBlockDocumentObj]
  footnotes: String
  footnotesObj: [Footnote]
  html: String
  order: Int
  remoteId: String
  sourceId: String
  tagName: String
  text: String
}

type TextBlockAdditional {
  certainty: Float
  classification: TextBlockAdditionalClassification
  creationTimeUnix: String
  distance: Float
  explainScore: String
  featureProjection(algorithm: String, dimensions: Int, iterations: Int, learningRate: Int, perplexity: Int): TextBlockAdditionalFeatureProjection
  group: TextBlockAdditionalGroup

  """The UUID of a Object, assigned by its local Weaviate"""
  id: String
  lastUpdateTimeUnix: String
  score: String
  vector: [Float]
}

type TextBlockAdditionalClassification {
  basedOn: [String]
  classifiedFields: [String]
  completed: String
  id: String
  scope: [String]
}

type TextBlockAdditionalFeatureProjection {
  vector: [Float]
}

type TextBlockAdditionalGroup {
  count: Int
  groupedBy: TextBlockAdditionalGroupGroupedBy
  hits: [TextBlockAdditionalGroupHits]
  id: Int
  maxDistance: Float
  minDistance: Float
}

type TextBlockAdditionalGroupGroupedBy {
  path: [String]
  value: String
}

type TextBlockAdditionalGroupHits {
  _additional: TextBlockAdditionalGroupHitsAdditional
  classNames: [String]
  document: [TextBlockDocumentObj]
  footnotes: String
  html: String
  order: Int
  remoteId: String
  sourceId: String
  tagName: String
  text: String
}

type TextBlockAdditionalGroupHitsAdditional {
  distance: Float
  id: String
  vector: [Float]
}

union TextBlockDocumentObj = Beacon | GoogleDoc | TextDocument

"""String or String[]"""
scalar TextDateAggregateObjectsAudioFile

"""String or String[]"""
scalar TextDateAggregateObjectsGoogleCalendarEvent

"""String or String[]"""
scalar TextDateAggregateObjectsGoogleDoc

"""String or String[]"""
scalar TextDateAggregateObjectsImageBlock

"""String or String[]"""
scalar TextDateAggregateObjectsSubtitleEntry

"""String or String[]"""
scalar TextDateAggregateObjectsSubtitleFile

"""String or String[]"""
scalar TextDateAggregateObjectsTextBlock

"""String or String[]"""
scalar TextDateAggregateObjectsTextDocument

"""String or String[]"""
scalar TextDateAggregateObjectsVideoFile

"""String or String[]"""
scalar TextDateGetObjectsAudioFile

"""String or String[]"""
scalar TextDateGetObjectsGoogleCalendarEvent

"""String or String[]"""
scalar TextDateGetObjectsGoogleDoc

"""String or String[]"""
scalar TextDateGetObjectsImageBlock

"""String or String[]"""
scalar TextDateGetObjectsSubtitleEntry

"""String or String[]"""
scalar TextDateGetObjectsSubtitleFile

"""String or String[]"""
scalar TextDateGetObjectsTextBlock

"""String or String[]"""
scalar TextDateGetObjectsTextDocument

"""String or String[]"""
scalar TextDateGetObjectsVideoFile

type TextDocument {
  _additional: TextDocumentAdditional
  authors: String
  blocks: [TextDocumentBlocksObj]
  createdAt: String
  description: String
  ext: String
  html: String
  mimeType: String
  modifiedAt: String
  originalName: String
  path: [String]
  pathString: String
  properties: String
  remoteId: String
  sourceId: String
  subtitle: String
  tags: [String]
  text: String
  title: String
  toc: String
}

type TextDocumentAdditional {
  certainty: Float
  classification: TextDocumentAdditionalClassification
  creationTimeUnix: String
  distance: Float
  explainScore: String
  featureProjection(algorithm: String, dimensions: Int, iterations: Int, learningRate: Int, perplexity: Int): TextDocumentAdditionalFeatureProjection
  group: TextDocumentAdditionalGroup

  """The UUID of a Object, assigned by its local Weaviate"""
  id: String
  lastUpdateTimeUnix: String
  score: String
  vector: [Float]
}

type TextDocumentAdditionalClassification {
  basedOn: [String]
  classifiedFields: [String]
  completed: String
  id: String
  scope: [String]
}

type TextDocumentAdditionalFeatureProjection {
  vector: [Float]
}

type TextDocumentAdditionalGroup {
  count: Int
  groupedBy: TextDocumentAdditionalGroupGroupedBy
  hits: [TextDocumentAdditionalGroupHits]
  id: Int
  maxDistance: Float
  minDistance: Float
}

type TextDocumentAdditionalGroupGroupedBy {
  path: [String]
  value: String
}

type TextDocumentAdditionalGroupHits {
  _additional: TextDocumentAdditionalGroupHitsAdditional
  authors: String
  blocks: [TextDocumentBlocksObj]
  createdAt: String
  description: String
  ext: String
  html: String
  mimeType: String
  modifiedAt: String
  originalName: String
  path: [String]
  pathString: String
  properties: String
  remoteId: String
  sourceId: String
  subtitle: String
  tags: [String]
  text: String
  title: String
  toc: String
}

type TextDocumentAdditionalGroupHitsAdditional {
  distance: Float
  id: String
  vector: [Float]
}

union TextDocumentBlocksObj = Beacon | ImageBlock | TextBlock

"""String or String[]"""
scalar TextGetObjectsAudioFile

"""String or String[]"""
scalar TextGetObjectsGoogleCalendarEvent

"""String or String[]"""
scalar TextGetObjectsGoogleDoc

"""String or String[]"""
scalar TextGetObjectsImageBlock

"""String or String[]"""
scalar TextGetObjectsSubtitleEntry

"""String or String[]"""
scalar TextGetObjectsSubtitleFile

"""String or String[]"""
scalar TextGetObjectsTextBlock

"""String or String[]"""
scalar TextGetObjectsTextDocument

"""String or String[]"""
scalar TextGetObjectsVideoFile

"""String or String[]"""
scalar TextStringAggregateObjectsAudioFile

"""String or String[]"""
scalar TextStringAggregateObjectsGoogleCalendarEvent

"""String or String[]"""
scalar TextStringAggregateObjectsGoogleDoc

"""String or String[]"""
scalar TextStringAggregateObjectsImageBlock

"""String or String[]"""
scalar TextStringAggregateObjectsSubtitleEntry

"""String or String[]"""
scalar TextStringAggregateObjectsSubtitleFile

"""String or String[]"""
scalar TextStringAggregateObjectsTextBlock

"""String or String[]"""
scalar TextStringAggregateObjectsTextDocument

"""String or String[]"""
scalar TextStringAggregateObjectsVideoFile

"""String or String[]"""
scalar TextStringGetObjectsAudioFile

"""String or String[]"""
scalar TextStringGetObjectsGoogleCalendarEvent

"""String or String[]"""
scalar TextStringGetObjectsGoogleDoc

"""String or String[]"""
scalar TextStringGetObjectsImageBlock

"""String or String[]"""
scalar TextStringGetObjectsSubtitleEntry

"""String or String[]"""
scalar TextStringGetObjectsSubtitleFile

"""String or String[]"""
scalar TextStringGetObjectsTextBlock

"""String or String[]"""
scalar TextStringGetObjectsTextDocument

"""String or String[]"""
scalar TextStringGetObjectsVideoFile

type TocItem {
  blockIndex: Int!
  href: String!
  level: Int!
  tag: String!
  title: String!
}

input Txt2VecC11yAggregateAudioFileMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateAudioFileMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateAudioFileMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yAggregateAudioFileMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateAudioFileMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateAudioFileMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yAggregateAudioFileNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yAggregateAudioFileMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yAggregateAudioFileMoveTo
}

input Txt2VecC11yAggregateGoogleCalendarEventMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateGoogleCalendarEventMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateGoogleCalendarEventMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yAggregateGoogleCalendarEventMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateGoogleCalendarEventMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateGoogleCalendarEventMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yAggregateGoogleCalendarEventNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yAggregateGoogleCalendarEventMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yAggregateGoogleCalendarEventMoveTo
}

input Txt2VecC11yAggregateGoogleDocMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateGoogleDocMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateGoogleDocMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yAggregateGoogleDocMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateGoogleDocMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateGoogleDocMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yAggregateGoogleDocNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yAggregateGoogleDocMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yAggregateGoogleDocMoveTo
}

input Txt2VecC11yAggregateImageBlockMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateImageBlockMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateImageBlockMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yAggregateImageBlockMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateImageBlockMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateImageBlockMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yAggregateImageBlockNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yAggregateImageBlockMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yAggregateImageBlockMoveTo
}

input Txt2VecC11yAggregateSubtitleEntryMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateSubtitleEntryMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateSubtitleEntryMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yAggregateSubtitleEntryMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateSubtitleEntryMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateSubtitleEntryMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yAggregateSubtitleEntryNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yAggregateSubtitleEntryMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yAggregateSubtitleEntryMoveTo
}

input Txt2VecC11yAggregateSubtitleFileMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateSubtitleFileMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateSubtitleFileMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yAggregateSubtitleFileMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateSubtitleFileMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateSubtitleFileMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yAggregateSubtitleFileNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yAggregateSubtitleFileMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yAggregateSubtitleFileMoveTo
}

input Txt2VecC11yAggregateTextBlockMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateTextBlockMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateTextBlockMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yAggregateTextBlockMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateTextBlockMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateTextBlockMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yAggregateTextBlockNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yAggregateTextBlockMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yAggregateTextBlockMoveTo
}

input Txt2VecC11yAggregateTextDocumentMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateTextDocumentMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateTextDocumentMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yAggregateTextDocumentMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateTextDocumentMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateTextDocumentMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yAggregateTextDocumentNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yAggregateTextDocumentMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yAggregateTextDocumentMoveTo
}

input Txt2VecC11yAggregateVideoFileMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateVideoFileMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateVideoFileMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yAggregateVideoFileMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yAggregateVideoFileMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yAggregateVideoFileMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yAggregateVideoFileNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yAggregateVideoFileMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yAggregateVideoFileMoveTo
}

input Txt2VecC11yExploreMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yExploreMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yExploreMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yExploreMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yExploreMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yExploreMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yExploreNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yExploreMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yExploreMoveTo
}

input Txt2VecC11yGetObjectsAudioFileMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsAudioFileMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsAudioFileMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yGetObjectsAudioFileMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsAudioFileMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsAudioFileMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yGetObjectsAudioFileNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yGetObjectsAudioFileMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yGetObjectsAudioFileMoveTo
}

input Txt2VecC11yGetObjectsGoogleCalendarEventMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsGoogleCalendarEventMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsGoogleCalendarEventMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yGetObjectsGoogleCalendarEventMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsGoogleCalendarEventMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsGoogleCalendarEventMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yGetObjectsGoogleCalendarEventNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yGetObjectsGoogleCalendarEventMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yGetObjectsGoogleCalendarEventMoveTo
}

input Txt2VecC11yGetObjectsGoogleDocMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsGoogleDocMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsGoogleDocMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yGetObjectsGoogleDocMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsGoogleDocMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsGoogleDocMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yGetObjectsGoogleDocNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yGetObjectsGoogleDocMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yGetObjectsGoogleDocMoveTo
}

input Txt2VecC11yGetObjectsImageBlockMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsImageBlockMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsImageBlockMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yGetObjectsImageBlockMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsImageBlockMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsImageBlockMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yGetObjectsImageBlockNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yGetObjectsImageBlockMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yGetObjectsImageBlockMoveTo
}

input Txt2VecC11yGetObjectsSubtitleEntryMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsSubtitleEntryMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsSubtitleEntryMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yGetObjectsSubtitleEntryMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsSubtitleEntryMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsSubtitleEntryMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yGetObjectsSubtitleEntryNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yGetObjectsSubtitleEntryMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yGetObjectsSubtitleEntryMoveTo
}

input Txt2VecC11yGetObjectsSubtitleFileMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsSubtitleFileMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsSubtitleFileMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yGetObjectsSubtitleFileMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsSubtitleFileMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsSubtitleFileMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yGetObjectsSubtitleFileNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yGetObjectsSubtitleFileMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yGetObjectsSubtitleFileMoveTo
}

input Txt2VecC11yGetObjectsTextBlockMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsTextBlockMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsTextBlockMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yGetObjectsTextBlockMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsTextBlockMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsTextBlockMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yGetObjectsTextBlockNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yGetObjectsTextBlockMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yGetObjectsTextBlockMoveTo
}

input Txt2VecC11yGetObjectsTextDocumentMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsTextDocumentMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsTextDocumentMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yGetObjectsTextDocumentMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsTextDocumentMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsTextDocumentMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yGetObjectsTextDocumentNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yGetObjectsTextDocumentMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yGetObjectsTextDocumentMoveTo
}

input Txt2VecC11yGetObjectsVideoFileMoveAwayFrom {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsVideoFileMoveAwayFromMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsVideoFileMoveAwayFromMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

input Txt2VecC11yGetObjectsVideoFileMoveTo {
  """
  Keywords are a list of search terms. Array type, e.g. ["keyword 1", "keyword 2"]
  """
  concepts: [String]

  """
  The force to apply for a particular movements. Must be between 0 and 1 where 0 is equivalent to no movement and 1 is equivalent to largest movement possible
  """
  force: Float!

  """objects"""
  objects: [Txt2VecC11yGetObjectsVideoFileMoveToMovementObjectsInpObj]
}

"""Movement Object"""
input Txt2VecC11yGetObjectsVideoFileMoveToMovementObjectsInpObj {
  """
  Concept identifier in the beacon format, such as weaviate://<hostname>/<kind>/id
  """
  beacon: String

  """id of an object"""
  id: String
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input Txt2VecC11yGetObjectsVideoFileNearTextInpObj {
  """
  Normalized Distance between the result item and the search vector. Normalized to be between 0 (identical vectors) and 1 (perfect opposite).
  """
  certainty: Float
  concepts: [String]!

  """
  The required degree of similarity between an object's characteristics and the provided filter values
  """
  distance: Float

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveAwayFrom: Txt2VecC11yGetObjectsVideoFileMoveAwayFrom

  """
  Move your search term closer to or further away from another vector described by keywords
  """
  moveTo: Txt2VecC11yGetObjectsVideoFileMoveTo
}

type VideoFile {
  _additional: VideoFileAdditional
  animatedImageUrl: VideoFile_animatedImageUrl_object
  assetId: String
  blob: String
  duration: Float
  ext: String
  files: [VideoFile_files_object]
  height: Float
  hlsUrl: String
  mimeType: String
  order: Int
  originalName: String
  path: [String]
  pathString: String
  playbackId: String
  remoteId: String
  size: Int
  sourceId: String
  subtitles: [VideoFileSubtitlesObj]
  thumbnailUrl: VideoFile_thumbnailUrl_object
  url: String
  width: Float
}

type VideoFileAdditional {
  certainty: Float
  classification: VideoFileAdditionalClassification
  creationTimeUnix: String
  distance: Float
  explainScore: String
  featureProjection(algorithm: String, dimensions: Int, iterations: Int, learningRate: Int, perplexity: Int): VideoFileAdditionalFeatureProjection
  group: VideoFileAdditionalGroup

  """The UUID of a Object, assigned by its local Weaviate"""
  id: String
  lastUpdateTimeUnix: String
  score: String
  vector: [Float]
}

type VideoFileAdditionalClassification {
  basedOn: [String]
  classifiedFields: [String]
  completed: String
  id: String
  scope: [String]
}

type VideoFileAdditionalFeatureProjection {
  vector: [Float]
}

type VideoFileAdditionalGroup {
  count: Int
  groupedBy: VideoFileAdditionalGroupGroupedBy
  hits: [VideoFileAdditionalGroupHits]
  id: Int
  maxDistance: Float
  minDistance: Float
}

type VideoFileAdditionalGroupGroupedBy {
  path: [String]
  value: String
}

type VideoFileAdditionalGroupHits {
  _additional: VideoFileAdditionalGroupHitsAdditional
  animatedImageUrl: VideoFile_animatedImageUrl_object
  assetId: String
  blob: String
  duration: Float
  ext: String
  files: [VideoFile_files_object]
  height: Float
  hlsUrl: String
  mimeType: String
  order: Int
  originalName: String
  path: [String]
  pathString: String
  playbackId: String
  remoteId: String
  size: Int
  sourceId: String
  subtitles: [VideoFileSubtitlesObj]
  thumbnailUrl: VideoFile_thumbnailUrl_object
  url: String
  width: Float
}

type VideoFileAdditionalGroupHitsAdditional {
  distance: Float
  id: String
  vector: [Float]
}

union VideoFileSubtitlesObj = Beacon | SubtitleFile

type VideoFile_animatedImageUrl_object {
  jpeg: String
  png: String
  webp: String
}

type VideoFile_files_object {
  bitrate: Float
  ext: String
  height: Float
  name: String
  size: Float
  url: String
  width: Float
}

type VideoFile_thumbnailUrl_object {
  jpeg: String
  png: String
  webp: String
}

"""Location of the root query"""
type WeaviateObj {
  """
  Filter options for a local Aggregate query, used to convert the result to the specified filters
  """
  Aggregate: AggregateObjectsObj

  """Explore Concepts on a local weaviate with vector-aided search"""
  Explore(
    """Limit the results set (usually fewer results mean faster queries)"""
    limit: Int
    nearObject: ExploreNearObjectInpObj
    nearText: Txt2VecC11yExploreNearTextInpObj
    nearVector: ExploreNearVectorInpObj

    """Offset of the results set (usually fewer results mean faster queries)"""
    offset: Int
  ): [ExploreObj]

  """Get Objects on a local Weaviate"""
  Get: GetObjectsObj
}